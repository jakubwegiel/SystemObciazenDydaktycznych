/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import static java.lang.Character.isDigit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Jakub
 */
public class AdministratorJFrame extends javax.swing.JFrame {

    /**
     * Creates new form AdministratorJFrame
     */
    public AdministratorJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu6 = new javax.swing.JPopupMenu();
        jMenuItemUpdate = new javax.swing.JMenuItem();
        jMenuItemDelete = new javax.swing.JMenuItem();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItemUpdatePrzemiot = new javax.swing.JMenuItem();
        jMenuItemDeletePrzedmiot = new javax.swing.JMenuItem();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel9 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelDodajPracownika = new javax.swing.JPanel();
        imieField = new javax.swing.JTextField();
        uprawnieniaComboBox = new javax.swing.JComboBox<>();
        nazwiskoField = new javax.swing.JTextField();
        stopienField = new javax.swing.JTextField();
        dodajPracownikButton = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanelDodajPrzedmiot = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        nazwaPrzedmiotField = new javax.swing.JTextField();
        dodajPrzedmiotButton = new javax.swing.JButton();
        hWyklPrzedmiotField = new javax.swing.JTextField();
        hCwPrzedmiotField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        hProjPrzedmiotField = new javax.swing.JTextField();
        hLabPrzedmiotField = new javax.swing.JTextField();
        jPanelZmienHaslo = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        starehasloField = new javax.swing.JPasswordField();
        jLabel12 = new javax.swing.JLabel();
        newPasswordField = new javax.swing.JPasswordField();
        jLabel13 = new javax.swing.JLabel();
        potwierdzPasswordField = new javax.swing.JPasswordField();
        jButtonZmienHaslo = new javax.swing.JButton();
        jPanelPracownicy = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pracownikTable = new javax.swing.JTable();
        jPanelPrzedmioty = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        przedmiotTable = new javax.swing.JTable();
        jPanelMenu = new javax.swing.JPanel();
        jButtonDodajPracownika = new javax.swing.JButton();
        jButtonZarzadzajKontem = new javax.swing.JButton();
        jButtonDodajPrzedmiot = new javax.swing.JButton();
        jButtonPracownicy = new javax.swing.JButton();
        jButtonPrzedmioty = new javax.swing.JButton();
        wylogujButton = new javax.swing.JButton();

        jMenuItemUpdate.setText("Zapisz");
        jMenuItemUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUpdateActionPerformed(evt);
            }
        });
        jPopupMenu6.add(jMenuItemUpdate);

        jMenuItemDelete.setText("Usuń");
        jMenuItemDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeleteActionPerformed(evt);
            }
        });
        jPopupMenu6.add(jMenuItemDelete);

        jMenuItemUpdatePrzemiot.setText("Zapisz");
        jMenuItemUpdatePrzemiot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUpdatePrzemiotActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItemUpdatePrzemiot);

        jMenuItemDeletePrzedmiot.setText("Usuń");
        jMenuItemDeletePrzedmiot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDeletePrzedmiotActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItemDeletePrzedmiot);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Panel Administratora");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jLayeredPane1.add(jPanel9);
        jLayeredPane1.repaint();
        jLayeredPane1.revalidate();
        jLayeredPane1.setBackground(new java.awt.Color(255, 255, 255));
        jLayeredPane1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel9.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 542, Short.MAX_VALUE)
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 43, Short.MAX_VALUE)
        );

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));

        jPanelDodajPracownika.setBackground(new java.awt.Color(255, 255, 255));

        imieField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imieFieldActionPerformed(evt);
            }
        });

        uprawnieniaComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrator", "Układający", "Nauczyciel" }));
        uprawnieniaComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uprawnieniaComboBoxActionPerformed(evt);
            }
        });

        dodajPracownikButton.setText("Dodaj");
        dodajPracownikButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajPracownikButtonActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Sylfaen", 3, 36)); // NOI18N
        jLabel15.setText("Dodaj Pracownika");

        jLabel16.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel16.setText("Imie:");

        jLabel17.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel17.setText("Nazwisko:");

        jLabel18.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel18.setText("Stopień:");

        jLabel19.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel19.setText("Uprawnienia:");

        javax.swing.GroupLayout jPanelDodajPracownikaLayout = new javax.swing.GroupLayout(jPanelDodajPracownika);
        jPanelDodajPracownika.setLayout(jPanelDodajPracownikaLayout);
        jPanelDodajPracownikaLayout.setHorizontalGroup(
            jPanelDodajPracownikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDodajPracownikaLayout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addGroup(jPanelDodajPracownikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelDodajPracownikaLayout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addGroup(jPanelDodajPracownikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stopienField, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelDodajPracownikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(nazwiskoField, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE)
                                .addComponent(imieField))))
                    .addGroup(jPanelDodajPracownikaLayout.createSequentialGroup()
                        .addGroup(jPanelDodajPracownikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(jPanelDodajPracownikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dodajPracownikButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uprawnieniaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(128, 128, 128))
        );
        jPanelDodajPracownikaLayout.setVerticalGroup(
            jPanelDodajPracownikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDodajPracownikaLayout.createSequentialGroup()
                .addContainerGap(161, Short.MAX_VALUE)
                .addComponent(jLabel15)
                .addGap(26, 26, 26)
                .addGroup(jPanelDodajPracownikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(imieField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanelDodajPracownikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nazwiskoField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(jPanelDodajPracownikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stopienField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(jPanelDodajPracownikaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(uprawnieniaComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(28, 28, 28)
                .addComponent(dodajPracownikButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77))
        );

        jTabbedPane1.addTab("Dodaj Pracownka", jPanelDodajPracownika);

        jPanelDodajPrzedmiot.setBackground(new java.awt.Color(255, 255, 255));

        jLabel14.setFont(new java.awt.Font("Sylfaen", 3, 36)); // NOI18N
        jLabel14.setText("Dodaj Przedmiot");

        jLabel7.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel7.setText("Nazwa:");

        nazwaPrzedmiotField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nazwaPrzedmiotFieldActionPerformed(evt);
            }
        });

        dodajPrzedmiotButton.setText("Dodaj");
        dodajPrzedmiotButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodajPrzedmiotButtonActionPerformed(evt);
            }
        });

        hWyklPrzedmiotField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hWyklPrzedmiotFieldActionPerformed(evt);
            }
        });

        hCwPrzedmiotField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hCwPrzedmiotFieldActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel8.setText("Liczba godzin wykład:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel9.setText("Liczba godzin ćwiczenia:");

        jLabel20.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel20.setText("Liczba godzin projekt:");

        jLabel21.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        jLabel21.setText("Liczba godzin labolatoria:");

        hProjPrzedmiotField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hProjPrzedmiotFieldActionPerformed(evt);
            }
        });

        hLabPrzedmiotField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hLabPrzedmiotFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDodajPrzedmiotLayout = new javax.swing.GroupLayout(jPanelDodajPrzedmiot);
        jPanelDodajPrzedmiot.setLayout(jPanelDodajPrzedmiotLayout);
        jPanelDodajPrzedmiotLayout.setHorizontalGroup(
            jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDodajPrzedmiotLayout.createSequentialGroup()
                .addGroup(jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDodajPrzedmiotLayout.createSequentialGroup()
                        .addContainerGap(107, Short.MAX_VALUE)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 298, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(75, 75, 75))
                    .addGroup(jPanelDodajPrzedmiotLayout.createSequentialGroup()
                        .addGroup(jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(dodajPrzedmiotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelDodajPrzedmiotLayout.createSequentialGroup()
                                .addGroup(jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelDodajPrzedmiotLayout.createSequentialGroup()
                                        .addGap(148, 148, 148)
                                        .addComponent(jLabel9))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDodajPrzedmiotLayout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel20, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addGroup(jPanelDodajPrzedmiotLayout.createSequentialGroup()
                                        .addGap(156, 156, 156)
                                        .addGroup(jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(nazwaPrzedmiotField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hCwPrzedmiotField, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hLabPrzedmiotField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                    .addComponent(hWyklPrzedmiotField)
                                    .addComponent(hProjPrzedmiotField))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)))
                .addGap(62, 62, 62))
        );
        jPanelDodajPrzedmiotLayout.setVerticalGroup(
            jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDodajPrzedmiotLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nazwaPrzedmiotField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hWyklPrzedmiotField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hCwPrzedmiotField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(hLabPrzedmiotField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanelDodajPrzedmiotLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(hProjPrzedmiotField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addComponent(dodajPrzedmiotButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Dodaj Przedmiot", jPanelDodajPrzedmiot);

        jPanelZmienHaslo.setBackground(new java.awt.Color(255, 255, 255));

        jLabel10.setFont(new java.awt.Font("Sylfaen", 3, 36)); // NOI18N
        jLabel10.setText("Zmień hasło");

        jLabel11.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel11.setText("Stare hasło:");

        jLabel12.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel12.setText("Nowe hasło:");

        jLabel13.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel13.setText("Potwierdź hasło:");

        jButtonZmienHaslo.setBackground(new java.awt.Color(0, 51, 51));
        jButtonZmienHaslo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButtonZmienHaslo.setForeground(new java.awt.Color(255, 255, 255));
        jButtonZmienHaslo.setText("Zmień");
        jButtonZmienHaslo.setBorder(null);
        jButtonZmienHaslo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZmienHasloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelZmienHasloLayout = new javax.swing.GroupLayout(jPanelZmienHaslo);
        jPanelZmienHaslo.setLayout(jPanelZmienHasloLayout);
        jPanelZmienHasloLayout.setHorizontalGroup(
            jPanelZmienHasloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelZmienHasloLayout.createSequentialGroup()
                .addContainerGap(151, Short.MAX_VALUE)
                .addGroup(jPanelZmienHasloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelZmienHasloLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelZmienHasloLayout.createSequentialGroup()
                        .addGroup(jPanelZmienHasloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelZmienHasloLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanelZmienHasloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel11)
                                    .addComponent(jLabel12)))
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanelZmienHasloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(starehasloField)
                            .addComponent(newPasswordField)
                            .addComponent(potwierdzPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButtonZmienHaslo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(137, 137, 137))
        );
        jPanelZmienHasloLayout.setVerticalGroup(
            jPanelZmienHasloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelZmienHasloLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addComponent(jLabel10)
                .addGap(34, 34, 34)
                .addGroup(jPanelZmienHasloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(starehasloField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelZmienHasloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(newPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelZmienHasloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(potwierdzPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jButtonZmienHaslo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(172, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab3", jPanelZmienHaslo);

        jPanelPracownicy.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        pracownikTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Imie", "Nazwisko", "Stopien", "Uprawnienia"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        pracownikTable.setColumnSelectionAllowed(true);
        pracownikTable.setGridColor(new java.awt.Color(255, 255, 255));
        pracownikTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pracownikTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(pracownikTable);

        javax.swing.GroupLayout jPanelPracownicyLayout = new javax.swing.GroupLayout(jPanelPracownicy);
        jPanelPracownicy.setLayout(jPanelPracownicyLayout);
        jPanelPracownicyLayout.setHorizontalGroup(
            jPanelPracownicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );
        jPanelPracownicyLayout.setVerticalGroup(
            jPanelPracownicyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPracownicyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab4", jPanelPracownicy);

        jPanelPrzedmioty.setBackground(new java.awt.Color(255, 255, 255));

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));

        przedmiotTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nazwa", "H Wyklad", "H Ćwiczenia", "H Labolatoria", "H Projekt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        przedmiotTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                przedmiotTableMouseReleased(evt);
            }
        });
        jScrollPane3.setViewportView(przedmiotTable);

        javax.swing.GroupLayout jPanelPrzedmiotyLayout = new javax.swing.GroupLayout(jPanelPrzedmioty);
        jPanelPrzedmioty.setLayout(jPanelPrzedmiotyLayout);
        jPanelPrzedmiotyLayout.setHorizontalGroup(
            jPanelPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );
        jPanelPrzedmiotyLayout.setVerticalGroup(
            jPanelPrzedmiotyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelPrzedmiotyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("tab5", jPanelPrzedmioty);

        jPanelMenu.setBackground(new java.awt.Color(0, 51, 51));

        jButtonDodajPracownika.setBackground(new java.awt.Color(0, 51, 51));
        jButtonDodajPracownika.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButtonDodajPracownika.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDodajPracownika.setText("Dodaj Pracownika");
        jButtonDodajPracownika.setBorder(null);
        jButtonDodajPracownika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajPracownikaActionPerformed(evt);
            }
        });

        jButtonZarzadzajKontem.setBackground(new java.awt.Color(0, 51, 51));
        jButtonZarzadzajKontem.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButtonZarzadzajKontem.setForeground(new java.awt.Color(255, 255, 255));
        jButtonZarzadzajKontem.setText("Zarządzaj kontem");
        jButtonZarzadzajKontem.setBorder(null);
        jButtonZarzadzajKontem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZarzadzajKontemActionPerformed(evt);
            }
        });

        jButtonDodajPrzedmiot.setBackground(new java.awt.Color(0, 51, 51));
        jButtonDodajPrzedmiot.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButtonDodajPrzedmiot.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDodajPrzedmiot.setText("Dodaj Przedmiot");
        jButtonDodajPrzedmiot.setBorder(null);
        jButtonDodajPrzedmiot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDodajPrzedmiotActionPerformed(evt);
            }
        });

        jButtonPracownicy.setBackground(new java.awt.Color(0, 51, 51));
        jButtonPracownicy.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButtonPracownicy.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPracownicy.setText("Pracownicy");
        jButtonPracownicy.setBorder(null);
        jButtonPracownicy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPracownicyActionPerformed(evt);
            }
        });

        jButtonPrzedmioty.setBackground(new java.awt.Color(0, 51, 51));
        jButtonPrzedmioty.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButtonPrzedmioty.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPrzedmioty.setText("Przedmioty");
        jButtonPrzedmioty.setBorder(null);
        jButtonPrzedmioty.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrzedmiotyActionPerformed(evt);
            }
        });

        wylogujButton.setBackground(new java.awt.Color(0, 51, 51));
        wylogujButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        wylogujButton.setForeground(new java.awt.Color(255, 255, 255));
        wylogujButton.setText("Wyloguj");
        wylogujButton.setBorder(null);
        wylogujButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wylogujButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMenuLayout = new javax.swing.GroupLayout(jPanelMenu);
        jPanelMenu.setLayout(jPanelMenuLayout);
        jPanelMenuLayout.setHorizontalGroup(
            jPanelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonDodajPracownika, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(jButtonZarzadzajKontem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonDodajPrzedmiot, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonPracownicy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonPrzedmioty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(wylogujButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelMenuLayout.setVerticalGroup(
            jPanelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenuLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jButtonDodajPracownika, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonDodajPrzedmiot, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonPracownicy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonPrzedmioty, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonZarzadzajKontem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(wylogujButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(228, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(jPanelMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel8Layout.createSequentialGroup()
                    .addGap(170, 170, 170)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelMenu, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 534, Short.MAX_VALUE)))
        );

        jLayeredPane1.setLayer(jPanel9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane1.setLayer(jPanel8, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addGap(176, 176, 176)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 502, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void imieFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_imieFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_imieFieldActionPerformed

    private void uprawnieniaComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uprawnieniaComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_uprawnieniaComboBoxActionPerformed

    private void dodajPrzedmiotButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajPrzedmiotButtonActionPerformed
                
        String nazwaPrzedmiot=nazwaPrzedmiotField.getText();
        String hWyklPrzedmiot=hWyklPrzedmiotField.getText();
        String hCwPrzedmiot=hCwPrzedmiotField.getText();
        String hLabPrzedmiot=hLabPrzedmiotField.getText();
        String hProjPrzedmiot=hProjPrzedmiotField.getText();
        dodajPrzedmiot(nazwaPrzedmiot, hWyklPrzedmiot, hCwPrzedmiot, hLabPrzedmiot, hProjPrzedmiot);
        
    }//GEN-LAST:event_dodajPrzedmiotButtonActionPerformed

    private void nazwaPrzedmiotFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nazwaPrzedmiotFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nazwaPrzedmiotFieldActionPerformed

    private void dodajPracownikButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodajPracownikButtonActionPerformed
        String login=imieField.getText()+nazwiskoField.getText();     
        dodajPracownika(imieField.getText(), nazwiskoField.getText(), stopienField.getText(), login, stopienField.getText(), (String) uprawnieniaComboBox.getSelectedItem ());
    }//GEN-LAST:event_dodajPracownikButtonActionPerformed

    private void jButtonDodajPracownikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajPracownikaActionPerformed
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButtonDodajPracownikaActionPerformed

    private void jButtonZarzadzajKontemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZarzadzajKontemActionPerformed
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButtonZarzadzajKontemActionPerformed

    private void jButtonDodajPrzedmiotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDodajPrzedmiotActionPerformed
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButtonDodajPrzedmiotActionPerformed

    private void pracownikTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pracownikTableMouseReleased
        if(evt.isPopupTrigger()){
            jPopupMenu6.show(this,evt.getX(),evt.getY());
        }
    }//GEN-LAST:event_pracownikTableMouseReleased

    private void jMenuItemUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUpdateActionPerformed
        int zaznaczonyWiersz=pracownikTable.getSelectedRow();
        String idOsoba=pracownikTable.getModel().getValueAt(zaznaczonyWiersz, 0).toString();
        String imie=pracownikTable.getModel().getValueAt(zaznaczonyWiersz, 1).toString();
        String nazwisko=pracownikTable.getModel().getValueAt(zaznaczonyWiersz, 2).toString();
        String stopien=pracownikTable.getModel().getValueAt(zaznaczonyWiersz, 3).toString();
        String uprawnienia=pracownikTable.getModel().getValueAt(zaznaczonyWiersz, 4).toString();
        updatePracownik(idOsoba, imie, nazwisko, stopien, uprawnienia);
        
    }//GEN-LAST:event_jMenuItemUpdateActionPerformed

    private void jMenuItemDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeleteActionPerformed
        int zaznaczonyWiersz=pracownikTable.getSelectedRow();
        
        String idOsoba=pracownikTable.getModel().getValueAt(zaznaczonyWiersz, 0).toString();
        deletePracownik(idOsoba);
    }//GEN-LAST:event_jMenuItemDeleteActionPerformed

    private void jButtonPracownicyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPracownicyActionPerformed
        wyczyscPracownikTable();
        jTabbedPane1.setSelectedIndex(3);
        wyswietlPracownikow();
    }//GEN-LAST:event_jButtonPracownicyActionPerformed

    private void jButtonPrzedmiotyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrzedmiotyActionPerformed
        wyczyscPrzedmiotTable();
        jTabbedPane1.setSelectedIndex(4);
        wyswietlPrzedmioty();
    }//GEN-LAST:event_jButtonPrzedmiotyActionPerformed

    private void przedmiotTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_przedmiotTableMouseReleased
        if(evt.isPopupTrigger()){
            jPopupMenu1.show(this,evt.getX(),evt.getY());
        }
    }//GEN-LAST:event_przedmiotTableMouseReleased

    private void jMenuItemUpdatePrzemiotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUpdatePrzemiotActionPerformed
       int zaznaczonyWiersz=przedmiotTable.getSelectedRow();
       String idPrzedmiot=przedmiotTable.getModel().getValueAt(zaznaczonyWiersz, 0).toString();
       String nazwa=przedmiotTable.getModel().getValueAt(zaznaczonyWiersz, 1).toString();
       String hWyklPrzedmiot=przedmiotTable.getModel().getValueAt(zaznaczonyWiersz, 2).toString();
       String hCwPrzedmiot=przedmiotTable.getModel().getValueAt(zaznaczonyWiersz, 3).toString();
       String hLabPrzedmiot=przedmiotTable.getModel().getValueAt(zaznaczonyWiersz, 4).toString();
       String hProjPrzedmiot=przedmiotTable.getModel().getValueAt(zaznaczonyWiersz, 5).toString();
        
       updatePrzedmiot(idPrzedmiot, nazwa, hWyklPrzedmiot, hCwPrzedmiot, hLabPrzedmiot, hProjPrzedmiot);
    }//GEN-LAST:event_jMenuItemUpdatePrzemiotActionPerformed

    private void jMenuItemDeletePrzedmiotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDeletePrzedmiotActionPerformed
        int zaznaczonyWiersz=przedmiotTable.getSelectedRow();
        String idPrzedmiot=przedmiotTable.getModel().getValueAt(zaznaczonyWiersz, 0).toString();
        deletePrzedmiot(idPrzedmiot);
    }//GEN-LAST:event_jMenuItemDeletePrzedmiotActionPerformed

    private void jButtonZmienHasloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZmienHasloActionPerformed
        String has=starehasloField.getText();
        String noweHas=newPasswordField.getText();
        String potwierdzHas=potwierdzPasswordField.getText();
        zmienHaslo(has, noweHas, potwierdzHas);    
    }//GEN-LAST:event_jButtonZmienHasloActionPerformed

    private void hWyklPrzedmiotFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hWyklPrzedmiotFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hWyklPrzedmiotFieldActionPerformed

    private void hCwPrzedmiotFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hCwPrzedmiotFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hCwPrzedmiotFieldActionPerformed

    private void hProjPrzedmiotFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hProjPrzedmiotFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hProjPrzedmiotFieldActionPerformed

    private void hLabPrzedmiotFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hLabPrzedmiotFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hLabPrzedmiotFieldActionPerformed

    private void wylogujButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wylogujButtonActionPerformed
        new ZalogujJFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_wylogujButtonActionPerformed
    
    public static void AddRowToPracownikJtable(Object[] dataRow){
        DefaultTableModel model = (DefaultTableModel)pracownikTable.getModel();
        model.addRow(dataRow);
    }
    
    public static void AddRowToPrzedmiotJtable(Object[] dataRow){
        DefaultTableModel model = (DefaultTableModel)przedmiotTable.getModel();
        model.addRow(dataRow);
    }
    
    public void dodajPracownika(String imieOsoba, String nazwiskoOsoba, String stopienOsoba, String loginKonto, String hasloKonto, String uprawnieniaPracownik){
        String insertOsobaQuery = "Insert INTO OSOBA VALUES (?,?,?,?)";
               String idOsobaQuery = "SELECT MAX(ID_OSOBA) FROM OSOBA";
               String insertKontoQuery = "Insert INTO KONTO VALUES (?,?,?,?,?)";
               String idKontoQuery = "SELECT MAX(ID_KONTO) FROM KONTO";
               String loginQuery = "SELECT COUNT(ID_OSOBA) FROM OSOBA WHERE IMIE=? AND NAZWISKO=?";
               DBCONNECT dbConnect= new DBCONNECT();
               String className=dbConnect.getClassName();
               String baza=dbConnect.getBaza();
               String loginBaza=dbConnect.getLoginBaza();
               String hasloBaza=dbConnect.getHasloBaza();
               Connection conn = null;
               Integer idOsoba=0;
               Integer idKonto=0;
               
               
               if(uprawnieniaPracownik.equals("Administrator")){
                   uprawnieniaPracownik="1";
               }
               else if(uprawnieniaPracownik.equals("Układający")){
                   uprawnieniaPracownik="2";
               }
               else if(uprawnieniaPracownik.equals("Nauczyciel")){
                   uprawnieniaPracownik="3";
               }
               else{
                   uprawnieniaPracownik="4";
               }
               System.out.println("uprawnieniaPracownik="+uprawnieniaPracownik);
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        conn = DriverManager.getConnection(baza,loginBaza, hasloBaza);
                        psmt = conn.prepareStatement(idOsobaQuery);
                        ResultSet rs = psmt.executeQuery();
                        
                         if(rs.next()){
                             idOsoba=Integer.parseInt(rs.getString(1))+1;
                             
                            }     
                         else{
                             idOsoba=1;
                            }
                        
                        psmt = conn.prepareStatement(insertOsobaQuery);
                        psmt.setInt(1,idOsoba);
                        psmt.setString(2,imieOsoba);
                        psmt.setString(3,nazwiskoOsoba);
                        psmt.setString(4,stopienOsoba);
                        rs = psmt.executeQuery();
                        if(rs.next()){
                             System.out.println("Dodano osobę.");
                            } 
                        psmt = conn.prepareStatement(idKontoQuery);
                        rs = psmt.executeQuery();
                        if(rs.next()){
                             idKonto=Integer.parseInt(rs.getString(1))+1;
                             
                            }     
                         else{
                             idOsoba=1;
                            }
                        psmt = conn.prepareStatement(loginQuery);
                        psmt.setString(1,imieOsoba);
                        psmt.setString(2,nazwiskoOsoba);
                        rs = psmt.executeQuery();
                        if(rs.next()){
                        int id_os=Integer.parseInt(rs.getString(1));
                        
                            if(id_os==1){
                            psmt = conn.prepareStatement(insertKontoQuery);
                            psmt.setInt(1,idKonto);
                            psmt.setInt(2,idOsoba);
                            psmt.setString(3,loginKonto);
                            psmt.setString(4,hasloKonto);
                            psmt.setString(5,uprawnieniaPracownik);
                            rs = psmt.executeQuery();
                            if(rs.next()){
                                 JOptionPane.showMessageDialog(null, "Dodano osobę:"+imieOsoba+" "+nazwiskoOsoba+" \n login osoby:"+loginKonto+" hasło:"+hasloKonto);
                              }else{
                                JOptionPane.showMessageDialog(null,"Błąd!");
                            }
                            
                            }else{
                                loginKonto=loginKonto+rs.getString(1);
                                psmt = conn.prepareStatement(insertKontoQuery);
                                psmt.setInt(1,idKonto);
                                psmt.setInt(2,idOsoba);
                                psmt.setString(3,loginKonto);
                                psmt.setString(4,hasloKonto);
                                psmt.setString(5,uprawnieniaPracownik);
                                rs = psmt.executeQuery();
                                if(rs.next()){
                                 JOptionPane.showMessageDialog(null, "Dodano osobę:"+imieOsoba+" "+nazwiskoOsoba+" login osoby:"+loginKonto+" hasło:"+hasloKonto);
                              }
                        }
                            if(rs.next()){
                                 JOptionPane.showMessageDialog(null, "Zmieniono dane!");
                              }
                        }
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }   
    }
    
    public void dodajPrzedmiot(String nazwaPrzedmiot, String hWyklPrzedmiot, String hCwPrzedmiot, String hLabPrzedmiot,String hProjPrzedmiot){
        String insertQuery = "Insert INTO PRZEDMIOT VALUES (?,?,?,?,?,?)";
                  String countQuery = "SELECT COUNT(ID_PRZEDMIOT) FROM PRZEDMIOT";
                  String idQuery = "SELECT MAX(ID_PRZEDMIOT) FROM PRZEDMIOT";
                  String przedmiotQuery = "SELECT COUNT(ID_PRZEDMIOT) FROM PRZEDMIOT WHERE NAZWA=?";
               DBCONNECT dbConnect= new DBCONNECT();
               String className=dbConnect.getClassName();
               String baza=dbConnect.getBaza();
               String loginBaza=dbConnect.getLoginBaza();
               String hasloBaza=dbConnect.getHasloBaza();
                Connection conn = null;
                Integer idPrzedmiot=0;
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        conn = DriverManager.getConnection(baza,loginBaza, hasloBaza);
                        psmt = conn.prepareStatement(countQuery);
                        ResultSet rs = psmt.executeQuery();
                        if(rs.next()){
                        int count=Integer.parseInt(rs.getString(1));
                        if(Integer.parseInt(rs.getString(1))!=0){
                        psmt = conn.prepareStatement(idQuery);
                        rs = psmt.executeQuery();
                        
                         if(rs.next()){
                             idPrzedmiot=Integer.parseInt(rs.getString(1))+1;
                             
                            } 
                        }
                         else{
                             idPrzedmiot=1;
                            }
                        }
                        
                        psmt = conn.prepareStatement(przedmiotQuery);
                        psmt.setString(1,nazwaPrzedmiot);
                        rs = psmt.executeQuery();
                        if(rs.next()){
                            int count=Integer.parseInt(rs.getString(1)); 
                           if(count==0){ 
                         
                        
                        psmt = conn.prepareStatement(insertQuery);
                        psmt.setInt(1,idPrzedmiot);
                        psmt.setString(2,nazwaPrzedmiot);
                        psmt.setString(3,hWyklPrzedmiot);
                        psmt.setString(4,hCwPrzedmiot);
                        psmt.setString(5,hLabPrzedmiot);
                        psmt.setString(6,hProjPrzedmiot);
                       // psmt = conn.prepareStatement(insertQuery);
                        rs = psmt.executeQuery();
                            if(rs.next()){
                                JOptionPane.showMessageDialog(null, "Dodano przedmiot.");
                            } 
                           }else{
                               JOptionPane.showMessageDialog(null, "Istnieje przedmiot o takiej nazwie.");
                           }
                        }
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }
    
    public void updatePracownik(String idOsoba,String imie,String nazwisko,String stopien,String uprawnienia){
         if(uprawnienia.equals("Administrator")){
                   uprawnienia="1";
               }
               else if(uprawnienia.equals("Układający")){
                   uprawnienia="2";
               }
               else if(uprawnienia.equals("Nauczyciel")){
                   uprawnienia="3";
               }
               else{
                   uprawnienia="4";
               }
        
        
        String updateOsobaQuery = "UPDATE OSOBA SET IMIE = ?,NAZWISKO = ?,STOPIEN = ? WHERE ID_OSOBA = ?";
        String updateKontoQuery = "UPDATE KONTO SET UPRAWNIENIA = ? WHERE ID_OSOBA = ?";
        DBCONNECT dbConnect= new DBCONNECT();
               String className=dbConnect.getClassName();
               String baza=dbConnect.getBaza();
               String loginBaza=dbConnect.getLoginBaza();
               String hasloBaza=dbConnect.getHasloBaza();
                Connection conn = null;
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        
                        psmt = conn.prepareStatement(updateOsobaQuery);
                        psmt.setString(1,imie);
                        psmt.setString(2,nazwisko);
                        psmt.setString(3,stopien);
                        psmt.setString(4,idOsoba);
                        psmt.executeUpdate();
                        
                        psmt = conn.prepareStatement(updateKontoQuery);
                        psmt.setString(1,uprawnienia);
                        psmt.setString(2,idOsoba);
                        psmt.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Zmieniono dane!");
       
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }
    
    public void deletePracownik(String idOsoba){
        String deleteKontoQuery = "DELETE FROM KONTO WHERE ID_OSOBA = ?";
        String deleteOsobaQuery = "DELETE FROM OSOBA WHERE ID_OSOBA = ?";
        DBCONNECT dbConnect= new DBCONNECT();
               String className=dbConnect.getClassName();
               String baza=dbConnect.getBaza();
               String loginBaza=dbConnect.getLoginBaza();
               String hasloBaza=dbConnect.getHasloBaza();
                Connection conn = null;
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        
                        psmt = conn.prepareStatement(deleteKontoQuery);
                        psmt.setString(1,idOsoba);
                        psmt.executeUpdate();
                        
                        psmt = conn.prepareStatement(deleteOsobaQuery);
                        psmt.setString(1,idOsoba);
                        psmt.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Usunięto dane!");
       
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }
    
    public void wyswietlPracownikow(){
        String query = "SELECT O.ID_OSOBA, O.IMIE, O.NAZWISKO, O.STOPIEN, K.UPRAWNIENIA FROM OSOBA O INNER JOIN KONTO K ON O.ID_OSOBA=K.ID_OSOBA";
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
        Connection conn = null;
        int sprawdzDane=0;
        int idOsoba=0;
        String imie="imie";
        String nazwisko="nazwisko";
        String stopien="stopień";
        String uprawnienia="4";
        
         if(uprawnienia.equals("1")){
                   uprawnienia="Administrator";
               }
               else if(uprawnienia.equals("2")){
                   uprawnienia="Układający";
               }
               else if(uprawnienia.equals("3")){
                   uprawnienia="Nauczyciel";
               }
               else{
                   uprawnienia="Brak uprawnień";
               }
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        psmt = conn.prepareStatement(query);
                        ResultSet rs = psmt.executeQuery();
                        System.out.println("executeQuery");
                        
                         while(rs.next()){
                             System.out.println("while re.next");
                             if(rs.getString(5).equals("1")){
                                    uprawnienia="Administrator";
                                }
                                else if(rs.getString(5).equals("2")){
                                     uprawnienia="Układający";
                                    }
                                else if(rs.getString(5).equals("3")){
                                    uprawnienia="Nauczyciel";
                                    }
                                    else{
                                        uprawnienia="Brak uprawnień";
                                        }
                             System.out.println("if-else");
                             //System.out.println(rs.getString(3) + " ");
              //JOptionPane.showMessageDialog(null, "Udało się!");
                            AdministratorJFrame.AddRowToPracownikJtable(new Object[]{
                                                                        rs.getString(1),
                                                                        rs.getString(2),
                                                                        rs.getString(3),
                                                                        rs.getString(4),
                                                                        uprawnienia
                });
                            
                            
          }
                        conn.close();
                        System.out.println("zamknięto połączenie z bazą!");
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }
    
    public void wyswietlPrzedmioty(){
        String query = "SELECT ID_PRZEDMIOT, NAZWA, H_WYKLAD, H_CWICZENIA, H_LABOLATORIA, H_PROJEKT FROM PRZEDMIOT";
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
        Connection conn = null;
        
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza, hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        psmt = conn.prepareStatement(query);
                        ResultSet rs = psmt.executeQuery();
                        System.out.println("executeQuery");
                        
                         while(rs.next()){
                             System.out.println("id:"+rs.getString(1)+" nazwa:"+rs.getString(2));
                             //System.out.println(rs.getString(3) + " ");
              //JOptionPane.showMessageDialog(null, "Udało się!");
                            AdministratorJFrame.AddRowToPrzedmiotJtable(new Object[]{
                                                                        rs.getString(1),
                                                                        rs.getString(2),
                                                                        rs.getString(3),
                                                                        rs.getString(4),
                                                                        rs.getString(5),
                                                                        rs.getString(6)
                });
                            
                            
          }
                        conn.close();
                        System.out.println("zamknięto połączenie z bazą!");
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }
    
    public void updatePrzedmiot(String idPrzedmiot,String nazwa,String hWyklPrzedmiot,String hCwPrzedmiot,String hLabPrzedmiot,String hProjPrzedmiot){
        
        String updateQuery = "UPDATE PRZEDMIOT SET NAZWA = ?,H_WYKLAD=?, H_CWICZENIA=?, H_LABOLATORIA=?, H_PROJEKT=? WHERE ID_PRZEDMIOT = ?";
        DBCONNECT dbConnect= new DBCONNECT();
               String className=dbConnect.getClassName();
               String baza=dbConnect.getBaza();
               String loginBaza=dbConnect.getLoginBaza();
               String hasloBaza=dbConnect.getHasloBaza();
                Connection conn = null;
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        
                        psmt = conn.prepareStatement(updateQuery);
                        psmt.setString(1,nazwa);
                        psmt.setString(2,hWyklPrzedmiot);
                        psmt.setString(3,hCwPrzedmiot);
                        psmt.setString(4,hLabPrzedmiot);
                        psmt.setString(5,hProjPrzedmiot);
                        psmt.setString(6,idPrzedmiot);
                        psmt.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Zmieniono dane!");
       
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }
    
    public void deletePrzedmiot(String idPrzedmiot){
        String deleteQuery = "DELETE FROM PRZEDMIOT WHERE ID_PRZEDMIOT = ?";
        DBCONNECT dbConnect= new DBCONNECT();
               String className=dbConnect.getClassName();
               String baza=dbConnect.getBaza();
               String loginBaza=dbConnect.getLoginBaza();
               String hasloBaza=dbConnect.getHasloBaza();
                Connection conn = null;
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        
                        psmt = conn.prepareStatement(deleteQuery);
                        psmt.setString(1,idPrzedmiot);
                        psmt.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Usunięto dane!");
       
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }
    
    public void zmienHaslo(String has,String noweHas,String potwierdzHas){
        String query = "Select * FROM KONTO WHERE LOGIN=? AND HASLO=?";
        String updateQuery = "UPDATE KONTO SET HASLO = ? WHERE LOGIN=? AND HASLO=?";
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
        Connection conn = null;
        ZalogujJFrame logframe= new ZalogujJFrame();
        String login=logframe.getLogin();
        System.out.println("login:"+login);
        
        try {
            Statement stmt;
            PreparedStatement psmt;
            Class.forName(className);
            System.out.println("driver zaladowany");
            //Ustawiamy dane dotyczące podłączenia
            conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
            System.out.println("baza?");
            stmt = conn.createStatement();
            psmt = conn.prepareStatement(query);
            psmt.setString(1,login);
            psmt.setString(2,has);
            ResultSet rs = psmt.executeQuery();

            if(rs.next()){
                if(sprawdzHaslo(noweHas)){
        
                if(noweHas.equals(potwierdzHas)){
                    psmt = conn.prepareStatement(updateQuery);
                    psmt.setString(1,noweHas);
                    psmt.setString(2,login);
                    psmt.setString(3,has);
                    psmt.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Hasło zostało zmienione!");
                }else{
                    JOptionPane.showMessageDialog(null, "Hasła się różnią!");
                }
                }else{
           JOptionPane.showMessageDialog(null, "Nowe hasło jest za słabe!"); 
        }
            }
            else{
                JOptionPane.showMessageDialog(null, "Złe hasło!");
            }
            conn.close();
        }
        //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
        catch(ClassNotFoundException wyjatek) {
            System.out.println("Problem ze sterownikiem");
            System.out.println(wyjatek.getMessage());
        }

        catch(SQLException wyjatek) {
            //e.printStackTrace();
            //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
            System.out.println("SQLException: " + wyjatek.getMessage());
            System.out.println("SQLState: " + wyjatek.getSQLState());
            System.out.println("VendorError: " + wyjatek.getErrorCode());
        }
    }
    
    public static void wyczyscPracownikTable(){
        DefaultTableModel dm = (DefaultTableModel)pracownikTable.getModel();
        int rowCount = dm.getRowCount();
//Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    public static void wyczyscPrzedmiotTable(){
        DefaultTableModel dm = (DefaultTableModel)przedmiotTable.getModel();
        int rowCount = dm.getRowCount();
//Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    public boolean sprawdzHaslo(String haslo){
        int dlugosc=haslo.length();
        boolean znakSpecjalny=false;
        boolean cyfra=false;
        System.out.println(dlugosc);
        for(int i=0;i<dlugosc;i++){
            
        
        char znak=haslo.charAt(i);
        if(isDigit(znak)){
           cyfra=true; 
           System.out.println(cyfra);
        }
        if(((znak>=0x21)&&(znak<=0x2f))||((znak>=0x3a)&&(znak<=0x40))||((znak>=0x5b)&&(znak<=0x60))||((znak>=0x7b)&&(znak<=0x7e))){
            znakSpecjalny=true;
            System.out.println(znakSpecjalny);
        }
        }
        if(cyfra&&znakSpecjalny&&(dlugosc>6)){
            return true;
        }else{
            return false;
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdministratorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdministratorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdministratorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdministratorJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdministratorJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dodajPracownikButton;
    private javax.swing.JButton dodajPrzedmiotButton;
    private javax.swing.JTextField hCwPrzedmiotField;
    private javax.swing.JTextField hLabPrzedmiotField;
    private javax.swing.JTextField hProjPrzedmiotField;
    private javax.swing.JTextField hWyklPrzedmiotField;
    private javax.swing.JTextField imieField;
    private javax.swing.JButton jButtonDodajPracownika;
    private javax.swing.JButton jButtonDodajPrzedmiot;
    private javax.swing.JButton jButtonPracownicy;
    private javax.swing.JButton jButtonPrzedmioty;
    private javax.swing.JButton jButtonZarzadzajKontem;
    private javax.swing.JButton jButtonZmienHaslo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenuItem jMenuItemDelete;
    private javax.swing.JMenuItem jMenuItemDeletePrzedmiot;
    private javax.swing.JMenuItem jMenuItemUpdate;
    private javax.swing.JMenuItem jMenuItemUpdatePrzemiot;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelDodajPracownika;
    private javax.swing.JPanel jPanelDodajPrzedmiot;
    private javax.swing.JPanel jPanelMenu;
    private javax.swing.JPanel jPanelPracownicy;
    private javax.swing.JPanel jPanelPrzedmioty;
    private javax.swing.JPanel jPanelZmienHaslo;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nazwaPrzedmiotField;
    private javax.swing.JTextField nazwiskoField;
    private javax.swing.JPasswordField newPasswordField;
    private javax.swing.JPasswordField potwierdzPasswordField;
    private static javax.swing.JTable pracownikTable;
    private static javax.swing.JTable przedmiotTable;
    private javax.swing.JPasswordField starehasloField;
    private javax.swing.JTextField stopienField;
    private javax.swing.JComboBox<String> uprawnieniaComboBox;
    private javax.swing.JButton wylogujButton;
    // End of variables declaration//GEN-END:variables
}
