/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.*;
import java.awt.*;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import static java.lang.Character.isDigit;
import java.util.ArrayList;
/**
 *
 * @author Jakub
 */
public class UkladajacyJFrame extends javax.swing.JFrame {

    /**
     * Creates new form UkladajocyJFrame
     */
    public UkladajacyJFrame() {
        initComponents();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItemUpdate = new javax.swing.JMenuItem();
        jMenuItemDodaj = new javax.swing.JMenuItem();
        jMenuItemUsun = new javax.swing.JMenuItem();
        jPopupMenu2 = new javax.swing.JPopupMenu();
        jMenuItemUpdateP = new javax.swing.JMenuItem();
        jMenuItemDodajP = new javax.swing.JMenuItem();
        jMenuItemUsunP = new javax.swing.JMenuItem();
        jPanel3 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jPanelMenu = new javax.swing.JPanel();
        jButtonPrzydzielGrupy = new javax.swing.JButton();
        jButtonPrzydzielNauczycieli = new javax.swing.JButton();
        jButtonZarzadzajKontem = new javax.swing.JButton();
        jButtonRaport = new javax.swing.JButton();
        wylogujButton = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelPrzydzielGrupy = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ukladajacyTable1 = new javax.swing.JTable();
        jPanelPrzydzielNauczycieli = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ukladajacyTable2 = new javax.swing.JTable();
        jPanelZarzadzanieKontem = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        starehasloField = new javax.swing.JPasswordField();
        newPasswordField = new javax.swing.JPasswordField();
        potwierdzPasswordField = new javax.swing.JPasswordField();
        jButtonZmienHaslo = new javax.swing.JButton();

        jMenuItemUpdate.setText("Zapisz Wiersz");
        jMenuItemUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUpdateActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItemUpdate);

        jMenuItemDodaj.setText("Dodaj Wiersz");
        jMenuItemDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDodajActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItemDodaj);

        jMenuItemUsun.setText("Usuń");
        jMenuItemUsun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUsunActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItemUsun);

        jMenuItemUpdateP.setText("Zapisz");
        jMenuItemUpdateP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUpdatePActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jMenuItemUpdateP);

        jMenuItemDodajP.setText("Dodaj");
        jMenuItemDodajP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemDodajPActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jMenuItemDodajP);

        jMenuItemUsunP.setText(" Usuń");
        jMenuItemUsunP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUsunPActionPerformed(evt);
            }
        });
        jPopupMenu2.add(jMenuItemUsunP);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Panel Układającego");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jPanel3ComponentAdded(evt);
            }
        });

        jLayeredPane1.add(jPanel6);
        jLayeredPane1.repaint();
        jLayeredPane1.revalidate();
        jLayeredPane1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setPreferredSize(new java.awt.Dimension(200, 100));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 758, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));

        jPanelMenu.setBackground(new java.awt.Color(0, 51, 51));

        jButtonPrzydzielGrupy.setBackground(new java.awt.Color(0, 51, 51));
        jButtonPrzydzielGrupy.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButtonPrzydzielGrupy.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPrzydzielGrupy.setText("Przydziel grupy");
        jButtonPrzydzielGrupy.setBorder(null);
        jButtonPrzydzielGrupy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrzydzielGrupyActionPerformed(evt);
            }
        });

        jButtonPrzydzielNauczycieli.setBackground(new java.awt.Color(0, 51, 51));
        jButtonPrzydzielNauczycieli.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButtonPrzydzielNauczycieli.setForeground(new java.awt.Color(255, 255, 255));
        jButtonPrzydzielNauczycieli.setText("Przydziel nauczycieli");
        jButtonPrzydzielNauczycieli.setBorder(null);
        jButtonPrzydzielNauczycieli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrzydzielNauczycieliActionPerformed(evt);
            }
        });

        jButtonZarzadzajKontem.setBackground(new java.awt.Color(0, 51, 51));
        jButtonZarzadzajKontem.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButtonZarzadzajKontem.setForeground(new java.awt.Color(255, 255, 255));
        jButtonZarzadzajKontem.setText("Zarządzaj kontem");
        jButtonZarzadzajKontem.setBorder(null);
        jButtonZarzadzajKontem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZarzadzajKontemActionPerformed(evt);
            }
        });

        jButtonRaport.setBackground(new java.awt.Color(0, 51, 51));
        jButtonRaport.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButtonRaport.setForeground(new java.awt.Color(255, 255, 255));
        jButtonRaport.setText("Generuj raport");
        jButtonRaport.setBorder(null);
        jButtonRaport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRaportActionPerformed(evt);
            }
        });

        wylogujButton.setBackground(new java.awt.Color(0, 51, 51));
        wylogujButton.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        wylogujButton.setForeground(new java.awt.Color(255, 255, 255));
        wylogujButton.setText("Wyloguj");
        wylogujButton.setBorder(null);
        wylogujButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wylogujButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelMenuLayout = new javax.swing.GroupLayout(jPanelMenu);
        jPanelMenu.setLayout(jPanelMenuLayout);
        jPanelMenuLayout.setHorizontalGroup(
            jPanelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonPrzydzielNauczycieli, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
                    .addComponent(jButtonPrzydzielGrupy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonZarzadzajKontem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonRaport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(wylogujButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelMenuLayout.setVerticalGroup(
            jPanelMenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMenuLayout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jButtonPrzydzielGrupy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButtonPrzydzielNauczycieli, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jButtonZarzadzajKontem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButtonRaport, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(wylogujButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(180, Short.MAX_VALUE))
        );

        jTabbedPane1.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);

        jPanelPrzydzielGrupy.setBackground(new java.awt.Color(255, 255, 255));

        ukladajacyTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nazwa przedmiotu", "Liczba Grup Wykład", "Liczba Grup Ćwiczenia", "Liczba Grup Labolatoria", "Liczba Grup Projekt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ukladajacyTable1.setColumnSelectionAllowed(true);
        ukladajacyTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ukladajacyTable1MouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(ukladajacyTable1);
        ukladajacyTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        javax.swing.GroupLayout jPanelPrzydzielGrupyLayout = new javax.swing.GroupLayout(jPanelPrzydzielGrupy);
        jPanelPrzydzielGrupy.setLayout(jPanelPrzydzielGrupyLayout);
        jPanelPrzydzielGrupyLayout.setHorizontalGroup(
            jPanelPrzydzielGrupyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
        );
        jPanelPrzydzielGrupyLayout.setVerticalGroup(
            jPanelPrzydzielGrupyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrzydzielGrupyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Przydzielanie przedmiotów do grup", jPanelPrzydzielGrupy);

        jPanelPrzydzielNauczycieli.setBackground(new java.awt.Color(255, 255, 255));

        ukladajacyTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Przedmiot", "Imie", "Nazwisko", "Liczba grup wyklad", "Liczba grup ćwiczenia", "Liczba grup labolatoria", "Liczba grup projekt"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ukladajacyTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ukladajacyTable2MouseReleased(evt);
            }
        });
        jScrollPane2.setViewportView(ukladajacyTable2);

        javax.swing.GroupLayout jPanelPrzydzielNauczycieliLayout = new javax.swing.GroupLayout(jPanelPrzydzielNauczycieli);
        jPanelPrzydzielNauczycieli.setLayout(jPanelPrzydzielNauczycieliLayout);
        jPanelPrzydzielNauczycieliLayout.setHorizontalGroup(
            jPanelPrzydzielNauczycieliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
        );
        jPanelPrzydzielNauczycieliLayout.setVerticalGroup(
            jPanelPrzydzielNauczycieliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelPrzydzielNauczycieliLayout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Przydzielanie prowadzacych do przedmiotów", jPanelPrzydzielNauczycieli);

        jPanelZarzadzanieKontem.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Sylfaen", 3, 36)); // NOI18N
        jLabel1.setText("Zmień hasło");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel2.setText("Stare hasło:");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel3.setText("Nowe hasło:");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel4.setText("Potwierdź hasło:");

        jButtonZmienHaslo.setBackground(new java.awt.Color(0, 51, 51));
        jButtonZmienHaslo.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButtonZmienHaslo.setForeground(new java.awt.Color(255, 255, 255));
        jButtonZmienHaslo.setText("Zmień");
        jButtonZmienHaslo.setBorder(null);
        jButtonZmienHaslo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonZmienHasloActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelZarzadzanieKontemLayout = new javax.swing.GroupLayout(jPanelZarzadzanieKontem);
        jPanelZarzadzanieKontem.setLayout(jPanelZarzadzanieKontemLayout);
        jPanelZarzadzanieKontemLayout.setHorizontalGroup(
            jPanelZarzadzanieKontemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelZarzadzanieKontemLayout.createSequentialGroup()
                .addGap(237, 237, 237)
                .addGroup(jPanelZarzadzanieKontemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelZarzadzanieKontemLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelZarzadzanieKontemLayout.createSequentialGroup()
                        .addGroup(jPanelZarzadzanieKontemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelZarzadzanieKontemLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanelZarzadzanieKontemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)))
                            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(jPanelZarzadzanieKontemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(starehasloField)
                            .addComponent(newPasswordField)
                            .addComponent(potwierdzPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButtonZmienHaslo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(243, Short.MAX_VALUE))
        );
        jPanelZarzadzanieKontemLayout.setVerticalGroup(
            jPanelZarzadzanieKontemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelZarzadzanieKontemLayout.createSequentialGroup()
                .addContainerGap(164, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addGroup(jPanelZarzadzanieKontemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(starehasloField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelZarzadzanieKontemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(newPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelZarzadzanieKontemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(potwierdzPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jButtonZmienHaslo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        jTabbedPane1.addTab("tab3", jPanelZarzadzanieKontem);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanelMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(86, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(jPanelMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(63, Short.MAX_VALUE))
        );

        jLayeredPane1.setLayer(jPanel6, javax.swing.JLayeredPane.POPUP_LAYER);
        jLayeredPane1.setLayer(jPanel7, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addGap(175, 175, 175)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 758, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(69, Short.MAX_VALUE)))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane1Layout.createSequentialGroup()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 548, Short.MAX_VALUE))
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 1048, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 914, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void jMenuItemUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUpdateActionPerformed
        int zaznaczonyWiersz=ukladajacyTable1.getSelectedRow();
        
        String id=ukladajacyTable1.getModel().getValueAt(zaznaczonyWiersz, 0).toString();
        String nazwaPrzedmiotu=ukladajacyTable1.getModel().getValueAt(zaznaczonyWiersz, 1).toString();
        String liczbaWyklad=ukladajacyTable1.getModel().getValueAt(zaznaczonyWiersz, 2).toString();
        String liczbaCwiczenia=ukladajacyTable1.getModel().getValueAt(zaznaczonyWiersz, 3).toString();
        String liczbaLabolatoria=ukladajacyTable1.getModel().getValueAt(zaznaczonyWiersz, 4).toString();
        String liczbaProjekt=ukladajacyTable1.getModel().getValueAt(zaznaczonyWiersz, 5).toString();
        
        updatePrzydzialGrupa(id, nazwaPrzedmiotu, liczbaWyklad, liczbaCwiczenia, liczbaLabolatoria, liczbaProjekt);
        
    }//GEN-LAST:event_jMenuItemUpdateActionPerformed

    private void ukladajacyTable1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ukladajacyTable1MouseReleased
        if(evt.isPopupTrigger()){
            jPopupMenu1.show(this,evt.getX(),evt.getY());
        }
    }//GEN-LAST:event_ukladajacyTable1MouseReleased

    private void jButtonPrzydzielGrupyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrzydzielGrupyActionPerformed
        wyczyscTable();
        jTabbedPane1.setSelectedIndex(0);
        wyswietlPrzydzialGrupa();
        
    }//GEN-LAST:event_jButtonPrzydzielGrupyActionPerformed

    private void jButtonPrzydzielNauczycieliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrzydzielNauczycieliActionPerformed
        wyczyscTable2();
        jTabbedPane1.setSelectedIndex(1);
        wyswietlPrzydzial();
        
    }//GEN-LAST:event_jButtonPrzydzielNauczycieliActionPerformed

    private void jButtonZarzadzajKontemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZarzadzajKontemActionPerformed
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButtonZarzadzajKontemActionPerformed

    private void jMenuItemDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDodajActionPerformed
        int idPrzydzialGrupa=0;
        String nazwaPrzedmiotu="Nazwa Przedmiotu";
        String liczbaWyklad="0";
        String liczbaCwiczenia="0";
        String liczbaLabolatoria="0";
        String liczbaProjekt="0";
        int idPrzedmiot=0;
        
        
        String selectPrzydzialQuery = "SELECT MAX(ID_PRZYDZIAL_GRUPA) FROM PRZYDZIAL_GRUPA";
        String selectPrzedmiotQuery = "SELECT MAX(ID_PRZEDMIOT) FROM PRZEDMIOT";
        String selectNazwaPrzedQuery = "SELECT ID_PRZEDMIOT FROM PRZEDMIOT WHERE NAZWA=?";
        String insertPrzedmiotQuery = "Insert INTO PRZEDMIOT VALUES (?,?,?,?,?,?)";
        String insertPrzydzialQuery = "Insert INTO PRZYDZIAL_GRUPA VALUES (?,?,?,?,?,?)";
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
        Connection conn = null;
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        psmt = conn.prepareStatement(selectPrzydzialQuery);
                        ResultSet rs = psmt.executeQuery();
                         if(rs.next()){
                            
                             idPrzydzialGrupa=Integer.parseInt(rs.getString(1))+1;
                         }else{
                             idPrzydzialGrupa=1;
                         }
                        
                        psmt = conn.prepareStatement(selectPrzedmiotQuery);
                        rs = psmt.executeQuery();
                         if(rs.next()){
                            
                             idPrzedmiot=Integer.parseInt(rs.getString(1))+1;
                         }else{
                             idPrzedmiot=1;
                         }
                         
                        psmt = conn.prepareStatement(selectNazwaPrzedQuery);
                        psmt.setString(1,nazwaPrzedmiotu);
                        rs = psmt.executeQuery();
                        if(rs.next()){
                            idPrzedmiot=Integer.parseInt(rs.getString(1));
                        }else{
                        
                        
                        psmt = conn.prepareStatement(insertPrzedmiotQuery);
                        psmt.setInt(1,idPrzedmiot);
                        psmt.setString(2,nazwaPrzedmiotu);
                        psmt.setString(3,liczbaWyklad);
                        psmt.setString(4,liczbaCwiczenia);
                        psmt.setString(5,liczbaLabolatoria);
                        psmt.setString(6,liczbaProjekt);
                        psmt.executeQuery();
                        }
                        
                        psmt = conn.prepareStatement(insertPrzydzialQuery);
                        psmt.setInt(1,idPrzydzialGrupa);
                        psmt.setInt(2,idPrzedmiot);
                        psmt.setString(3,liczbaWyklad);
                        psmt.setString(4,liczbaCwiczenia);
                        psmt.setString(5,liczbaLabolatoria);
                        psmt.setString(6,liczbaProjekt);
                        psmt.executeQuery();
       
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
                UkladajacyJFrame.AddRowToJtable(new Object[]{
                                                                        idPrzydzialGrupa,
                                                                        nazwaPrzedmiotu,
                                                                        liczbaWyklad,
                                                                        liczbaCwiczenia,
                                                                        liczbaLabolatoria,
                                                                        liczbaProjekt,
                                                                        
                });
                
    }//GEN-LAST:event_jMenuItemDodajActionPerformed

    private void jButtonZmienHasloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonZmienHasloActionPerformed
        String has=starehasloField.getText();
        String noweHas=newPasswordField.getText();
        String potwierdzHas=potwierdzPasswordField.getText();
        zmienHaslo(has, noweHas, potwierdzHas);
    }//GEN-LAST:event_jButtonZmienHasloActionPerformed

    private void jPanel3ComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jPanel3ComponentAdded
            
    }//GEN-LAST:event_jPanel3ComponentAdded

    private void ukladajacyTable2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ukladajacyTable2MouseReleased
        if(evt.isPopupTrigger()){
            jPopupMenu2.show(this,evt.getX(),evt.getY());
        }
    }//GEN-LAST:event_ukladajacyTable2MouseReleased

    private void jMenuItemUpdatePActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUpdatePActionPerformed
        int zaznaczonyWiersz=ukladajacyTable2.getSelectedRow();
        String id=ukladajacyTable2.getModel().getValueAt(zaznaczonyWiersz, 0).toString();
        String nazwaPrzedmiotu=ukladajacyTable2.getModel().getValueAt(zaznaczonyWiersz, 1).toString();
        String imie=ukladajacyTable2.getModel().getValueAt(zaznaczonyWiersz, 2).toString();
        String nazwisko=ukladajacyTable2.getModel().getValueAt(zaznaczonyWiersz, 3).toString();
        String liczbaWyklad=ukladajacyTable2.getModel().getValueAt(zaznaczonyWiersz, 4).toString();
        String liczbaCwiczenia=ukladajacyTable2.getModel().getValueAt(zaznaczonyWiersz, 5).toString();
        String liczbaLaboratoria=ukladajacyTable2.getModel().getValueAt(zaznaczonyWiersz, 6).toString();
        String liczbaProjekt=ukladajacyTable2.getModel().getValueAt(zaznaczonyWiersz, 7).toString();
        
        updatePrzydzial(id, nazwaPrzedmiotu, imie, nazwisko, liczbaWyklad, liczbaCwiczenia, liczbaLaboratoria, liczbaProjekt);
    }//GEN-LAST:event_jMenuItemUpdatePActionPerformed

    private void jMenuItemDodajPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemDodajPActionPerformed
        int idPrzydzialGrupa=0;
        String nazwaPrzedmiotu="Nazwa Przedmiotu";
        String imie="Imie";
        String nazwisko="Nazwisko";
        String liczbaWyklad="0";
        String liczbaCwiczenia="0";
        String liczbaLabolatoria="0";
        String liczbaProjekt="0";
        int idPrzedmiot=0;
        int idOsoba=0;
        
        
        String selectPrzydzialQuery = "SELECT MAX(ID_PRZYDZIAL) FROM PRZYDZIAL";
        String selectPrzedmiotQuery = "SELECT MAX(ID_PRZEDMIOT) FROM PRZEDMIOT";
        String selectOsobaQuery = "SELECT MAX(ID_OSOBA) FROM OSOBA";
        String selectNazwaPrzedQuery="SELECT ID_PRZEDMIOT FROM PRZEDMIOT WHERE NAZWA=?";
        String selectIdOsobaQuery="SELECT ID_OSOBA FROM OSOBA WHERE IMIE=? AND NAZWISKO=?";
        String insertPrzedmiotQuery = "Insert INTO PRZEDMIOT VALUES (?,?,?,?,?,?)";
        String insertOsobaQuery = "Insert INTO OSOBA VALUES (?,?,?,'stopien')";
        String insertPrzydzialQuery = "Insert INTO PRZYDZIAL VALUES (?,?,?,?,?,?,?)";
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
        Connection conn = null;
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        psmt = conn.prepareStatement(selectPrzydzialQuery);
                        ResultSet rs = psmt.executeQuery();
                         if(rs.next()){
                            
                             idPrzydzialGrupa=Integer.parseInt(rs.getString(1))+1;
                         }else{
                             idPrzydzialGrupa=1;
                         }
                        
                        psmt = conn.prepareStatement(selectPrzedmiotQuery);
                        rs = psmt.executeQuery();
                         if(rs.next()){
                            
                             idPrzedmiot=Integer.parseInt(rs.getString(1))+1;
                         }else{
                             idPrzedmiot=1;
                         }
                         
                        psmt = conn.prepareStatement(selectOsobaQuery);
                        rs = psmt.executeQuery();
                         if(rs.next()){
                            
                             idOsoba=Integer.parseInt(rs.getString(1))+1;
                         }else{
                             idOsoba=1;
                         }
                         
                         
                        psmt = conn.prepareStatement(selectNazwaPrzedQuery);
                        psmt.setString(1,nazwaPrzedmiotu);
                        rs = psmt.executeQuery();
                        if(rs.next()){
                            idPrzedmiot=Integer.parseInt(rs.getString(1));
                        }else{
                        
                        psmt = conn.prepareStatement(insertPrzedmiotQuery);
                        psmt.setInt(1,idPrzedmiot);
                        psmt.setString(2,nazwaPrzedmiotu);
                        psmt.setString(3,liczbaWyklad);
                        psmt.setString(4,liczbaCwiczenia);
                        psmt.setString(5,liczbaLabolatoria);
                        psmt.setString(6,liczbaProjekt);
                        psmt.executeQuery();
                        }
                        
                            
                        psmt = conn.prepareStatement(selectIdOsobaQuery);
                        psmt.setString(1,imie);
                        psmt.setString(2,nazwisko);
                        rs = psmt.executeQuery();
                        if(rs.next()){
                            idOsoba=Integer.parseInt(rs.getString(1));
                        }else{
                        psmt = conn.prepareStatement(insertOsobaQuery);
                        psmt.setInt(1,idOsoba);
                        psmt.setString(2,imie);
                        psmt.setString(3,nazwisko);
                        psmt.executeQuery();
                        }
                        System.out.println("id_osoba="+idOsoba);
                        psmt = conn.prepareStatement(insertPrzydzialQuery);
                        psmt.setInt(1,idPrzydzialGrupa);
                        psmt.setInt(2,idPrzedmiot);
                        psmt.setInt(3,idOsoba);
                        psmt.setString(4,liczbaWyklad);
                        psmt.setString(5,liczbaCwiczenia);
                        psmt.setString(6,liczbaLabolatoria);
                        psmt.setString(7,liczbaProjekt);
                        psmt.executeQuery();
       
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
                UkladajacyJFrame.AddRowToJtable2(new Object[]{
                                                                        idPrzydzialGrupa,
                                                                        nazwaPrzedmiotu,
                                                                        imie,
                                                                        nazwisko,
                                                                        liczbaWyklad,
                                                                        liczbaCwiczenia,
                                                                        liczbaLabolatoria,
                                                                        liczbaProjekt,
                                                                        
                });
    }//GEN-LAST:event_jMenuItemDodajPActionPerformed

    private void jMenuItemUsunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUsunActionPerformed
        int zaznaczonyWiersz=ukladajacyTable1.getSelectedRow();
        
        String idPrzydzial=ukladajacyTable1.getModel().getValueAt(zaznaczonyWiersz, 0).toString();
        String deleteKontoQuery = "DELETE FROM PRZYDZIAL_GRUPA WHERE ID_PRZYDZIAL_GRUPA = ?";
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
                Connection conn = null;
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        
                        psmt = conn.prepareStatement(deleteKontoQuery);
                        psmt.setString(1,idPrzydzial);
                        psmt.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Usunięto dane!");
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }//GEN-LAST:event_jMenuItemUsunActionPerformed

    private void jButtonRaportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRaportActionPerformed
        generujRaport();
                
    }//GEN-LAST:event_jButtonRaportActionPerformed

    private void wylogujButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wylogujButtonActionPerformed
        new ZalogujJFrame().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_wylogujButtonActionPerformed

    private void jMenuItemUsunPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUsunPActionPerformed
        int zaznaczonyWiersz=ukladajacyTable2.getSelectedRow();
        
        String idPrzydzial=ukladajacyTable2.getModel().getValueAt(zaznaczonyWiersz, 0).toString();
        String deletePrzydzialQuery = "DELETE FROM PRZYDZIAL WHERE ID_PRZYDZIAL = ?";
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
                Connection conn = null;
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt; 
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        
                        psmt = conn.prepareStatement(deletePrzydzialQuery);
                        psmt.setString(1,idPrzydzial);
                        psmt.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Usunięto dane!");
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }//GEN-LAST:event_jMenuItemUsunPActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void AddRowToJtable(Object[] dataRow){
        DefaultTableModel model = (DefaultTableModel)ukladajacyTable1.getModel();
        model.addRow(dataRow);
    }
    
    public static void wyczyscTable(){
        DefaultTableModel dm = (DefaultTableModel)ukladajacyTable1.getModel();
        int rowCount = dm.getRowCount();
//Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    public static void AddRowToJtable2(Object[] dataRow){
        DefaultTableModel model = (DefaultTableModel)ukladajacyTable2.getModel();
        model.addRow(dataRow);
    }
    
    public static void wyczyscTable2(){
        DefaultTableModel dm = (DefaultTableModel)ukladajacyTable2.getModel();
        int rowCount = dm.getRowCount();
//Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            dm.removeRow(i);
        }
    }
    
    public void wyswietlPrzydzialGrupa(){
        String query = "SELECT PG.ID_PRZYDZIAL_GRUPA, P.NAZWA, PG.ILOSC_GRUP_WYKL, PG.ILOSC_GRUP_CW, PG.ILOSC_GRUP_LAB, ILOSC_GRUP_PROJ FROM PRZEDMIOT P INNER JOIN PRZYDZIAL_GRUPA PG ON P.ID_PRZEDMIOT=PG.ID_PRZEDMIOT";
        String selectCountQuery = "SELECT COUNT (ID_PRZYDZIAL_GRUPA) FROM PRZYDZIAL_GRUPA";
        String selectPrzydzialQuery = "SELECT MAX(ID_PRZYDZIAL_GRUPA) FROM PRZYDZIAL_GRUPA";
        String selectPrzedmiotQuery = "SELECT MAX(ID_PRZEDMIOT) FROM PRZEDMIOT";
        String selectNazwaPrzedQuery = "SELECT ID_PRZEDMIOT FROM PRZEDMIOT WHERE NAZWA=?";
        String insertPrzedmiotQuery = "Insert INTO PRZEDMIOT VALUES (?,?,?,?,?,?)";
        String insertPrzydzialQuery = "Insert INTO PRZYDZIAL_GRUPA VALUES (?,?,?,?,?,?)";
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
        Connection conn = null;
        int sprawdzDane=0;
        int idPrzydzialGrupa=0;
        String nazwaPrzedmiotu="Nazwa Przedmiotu";
        String liczbaWyklad="0";
        String liczbaCwiczenia="0";
        String liczbaLabolatoria="0";
        String liczbaProjekt="0";
        int idPrzedmiot=0;
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza, hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        psmt = conn.prepareStatement(selectCountQuery);
                        ResultSet rs = psmt.executeQuery();
                         if(rs.next()){
                             sprawdzDane=Integer.parseInt(rs.getString(1));
                             System.out.println("sprawdzdane="+sprawdzDane);
                         }
                        if(sprawdzDane==0){
                            System.out.println("sprawdzdane="+sprawdzDane);
                             idPrzydzialGrupa=1;
                         
                         System.out.println("sprawdzdane="+sprawdzDane);
                        System.out.println("Blad1"+sprawdzDane);
                        psmt = conn.prepareStatement(selectPrzedmiotQuery);
                        rs = psmt.executeQuery();
                         if(rs.next()){
                            
                             idPrzedmiot=Integer.parseInt(rs.getString(1))+1;
                         }else{
                             idPrzedmiot=1;
                         }
                        psmt = conn.prepareStatement(selectNazwaPrzedQuery);
                        psmt.setString(1,nazwaPrzedmiotu);
                        rs = psmt.executeQuery();
                        if(rs.next()){
                            idPrzedmiot=Integer.parseInt(rs.getString(1));
                        }else{
                        
                        
                        psmt = conn.prepareStatement(insertPrzedmiotQuery);
                        psmt.setInt(1,idPrzedmiot);
                        psmt.setString(2,nazwaPrzedmiotu);
                        psmt.setString(3,liczbaWyklad);
                        psmt.setString(4,liczbaCwiczenia);
                        psmt.setString(5,liczbaLabolatoria);
                        psmt.setString(6,liczbaProjekt);
                        psmt.executeQuery();
                        }
                        psmt = conn.prepareStatement(insertPrzydzialQuery);
                        psmt.setInt(1,idPrzydzialGrupa);
                        psmt.setInt(2,idPrzedmiot);
                        psmt.setString(3,liczbaWyklad);
                        psmt.setString(4,liczbaCwiczenia);
                        psmt.setString(5,liczbaLabolatoria);
                        psmt.setString(6,liczbaProjekt);
                        psmt.executeQuery();
                        UkladajacyJFrame.AddRowToJtable(new Object[]{
                                                                        idPrzydzialGrupa,
                                                                        nazwaPrzedmiotu,
                                                                        liczbaWyklad,
                                                                        liczbaCwiczenia,
                                                                        liczbaLabolatoria,
                                                                        liczbaProjekt,
                                                                        
                        });
                            
                        }else{
                        psmt = conn.prepareStatement(query);
                        rs = psmt.executeQuery();
                        
                         while(rs.next()){
                             //System.out.println(rs.getString(3) + " ");
              //JOptionPane.showMessageDialog(null, "Udało się!");
                            UkladajacyJFrame.AddRowToJtable(new Object[]{
                                                                        rs.getString(1),
                                                                        rs.getString(2),
                                                                        rs.getString(3),
                                                                        rs.getString(4),
                                                                        rs.getString(5),
                                                                        rs.getString(6)
                });
                            
                            
          }
                             
                   
                       
                    System.out.println("blad5"+sprawdzDane);
                        }
                        conn.close();
                        System.out.println("zamknięto połączenie z bazą!");
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }
    
    public void wyswietlPrzydzial(){
        String query = "SELECT P.ID_PRZYDZIAL, PR.NAZWA, O.IMIE, O.NAZWISKO, P.ILOSC_GRUP_WYKL, P.ILOSC_GRUP_CW, P.ILOSC_GRUP_LAB, P.ILOSC_GRUP_PROJ FROM PRZYDZIAL P LEFT JOIN OSOBA O ON O.ID_OSOBA = P.ID_OSOBA LEFT JOIN PRZEDMIOT PR ON PR.ID_PRZEDMIOT = P.ID_PRZEDMIOT";
        String selectCountQuery = "SELECT COUNT (ID_PRZYDZIAL) FROM PRZYDZIAL";
        String selectPrzydzialQuery = "SELECT MAX(ID_PRZYDZIAL) FROM PRZYDZIAL";
        String selectPrzedmiotQuery = "SELECT MAX(ID_PRZEDMIOT) FROM PRZEDMIOT";
        String selectNazwaPrzedQuery="SELECT ID_PRZEDMIOT FROM PRZEDMIOT WHERE NAZWA=?";
        String selectIdOsobaQuery="SELECT ID_OSOBA FROM OSOBA WHERE IMIE=? AND NAZWISKO=?";
        String selectOsobaQuery = "SELECT MAX(ID_OSOBA) FROM OSOBA";
        String insertPrzedmiotQuery = "Insert INTO PRZEDMIOT VALUES (?,?,?,?,?,?)";
        String insertOsobaQuery = "Insert INTO OSOBA VALUES (?,?,?,'stopien')";
        String insertPrzydzialQuery = "Insert INTO PRZYDZIAL VALUES (?,?,?,?,?,?,?)";
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
        Connection conn = null;
        int sprawdzDane=0;
        int idPrzydzial=0;
        String nazwaPrzedmiotu="Nazwa Przedmiotu";
        String imie="Imie";
        String nazwisko="Nazwisko";
        String liczbaWyklad="0";
        String liczbaCwiczenia="0";
        String liczbaLabolatoria="0";
        String liczbaProjekt="0";
        int idPrzedmiot=0;
        int idOsoba=0;
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        psmt = conn.prepareStatement(selectCountQuery);
                        ResultSet rs = psmt.executeQuery();
                         if(rs.next()){
                             sprawdzDane=Integer.parseInt(rs.getString(1));
                             System.out.println("sprawdzdane="+sprawdzDane);
                         }
                        if(sprawdzDane==0){
                            System.out.println("sprawdzdane="+sprawdzDane);
                             idPrzydzial=1;
                         
                        psmt = conn.prepareStatement(selectPrzedmiotQuery);
                        rs = psmt.executeQuery();
                        System.out.println("selectPrzedmiotQuery");
                         if(rs.next()){
                            
                             idPrzedmiot=Integer.parseInt(rs.getString(1))+1;
                         }else{
                             idPrzedmiot=1;
                         }
                         psmt = conn.prepareStatement(selectOsobaQuery);
                        rs = psmt.executeQuery();
                        System.out.println("selectOsobaQuery");
                         if(rs.next()){
                            
                             idOsoba=Integer.parseInt(rs.getString(1))+1;
                         }else{
                             idOsoba=1;
                         }
                         System.out.println("selectNazwaPrzedQuery");
                        psmt = conn.prepareStatement(selectNazwaPrzedQuery);
                        psmt.setString(1,nazwaPrzedmiotu);
                        rs = psmt.executeQuery();
                        
                        if(rs.next()){
                            idPrzedmiot=Integer.parseInt(rs.getString(1));
                        }else{
                        
                        System.out.println("insertPrzedmiotQuery");
                        psmt = conn.prepareStatement(insertPrzedmiotQuery);
                        psmt.setInt(1,idPrzedmiot);
                        psmt.setString(2,nazwaPrzedmiotu);
                        psmt.setString(3,"0");
                        psmt.setString(4,"0");
                        psmt.setString(5,"0");
                        psmt.setString(6,"0");
                        psmt.executeQuery();
                        
                        }
                        System.out.println("selectIdOsobaQuery");
                        psmt = conn.prepareStatement(selectIdOsobaQuery);
                        psmt.setString(1,imie);
                        psmt.setString(2,nazwisko);
                        rs = psmt.executeQuery();
                        
                        if(rs.next()){
                            idOsoba=Integer.parseInt(rs.getString(1));
                        }else{
                            System.out.println("insertOsobaQuery");
                        psmt = conn.prepareStatement(insertOsobaQuery);
                        psmt.setInt(1,idOsoba);
                        psmt.setString(2,imie);
                        psmt.setString(3,nazwisko);
                        psmt.executeQuery();
                        
                        }
                        System.out.println("insertPrzydzialQuery");
                        psmt = conn.prepareStatement(insertPrzydzialQuery);
                        psmt.setInt(1,idPrzydzial);
                        psmt.setInt(2,idPrzedmiot);
                        psmt.setInt(3,idOsoba);
                        psmt.setString(4,liczbaWyklad);
                        psmt.setString(5,liczbaCwiczenia);
                        psmt.setString(6,liczbaLabolatoria);
                        psmt.setString(7,liczbaProjekt);
                        psmt.executeQuery();
                        
                        UkladajacyJFrame.AddRowToJtable2(new Object[]{
                                                                        idPrzydzial,
                                                                        nazwaPrzedmiotu,
                                                                        imie,
                                                                        nazwisko,
                                                                        liczbaWyklad,
                                                                        liczbaCwiczenia,
                                                                        liczbaLabolatoria,
                                                                        liczbaProjekt,
                                                                        
                        });
                            
                        }else{
                        psmt = conn.prepareStatement(query);
                        rs = psmt.executeQuery();
                        
                         while(rs.next()){
                             //System.out.println(rs.getString(3) + " ");
              //JOptionPane.showMessageDialog(null, "Udało się!");
                            UkladajacyJFrame.AddRowToJtable2(new Object[]{
                                                                        rs.getString(1),
                                                                        rs.getString(2),
                                                                        rs.getString(3),
                                                                        rs.getString(4),
                                                                        rs.getString(5),
                                                                        rs.getString(6),
                                                                        rs.getString(7),
                                                                        rs.getString(8)
                });
                            
                            
          }
                             
                   
                       
                    System.out.println("blad5"+sprawdzDane);
                        }
                        conn.close();
                        System.out.println("zamknięto połączenie z bazą!");
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }  
    }
    
    public void updatePrzydzial(String id,String nazwaPrzedmiotu,String imie,String nazwisko,String liczbaWyklad,String liczbaCwiczenia,String liczbaLaboratoria,String liczbaProjekt){
         
        
        
        
        
        String idPrzedmiot="0";
        String idOsoba="0";
        int sprawdzPrzedmiot=0;
        int lWyklPg=0;
        int lWyklP=0;
        int lCwPg=0;
        int lCwP=0;
        int lLabPg=0;
        int lLabP=0;
        int lProjPg=0;
        int lProjP=0;        
        
        int lWyklBaza=0;
        int lCwBaza=0;
        int lLabBaza=0;
        int lProjBaza=0;
        
        
        String selectQuery = "SELECT ID_PRZEDMIOT FROM PRZEDMIOT WHERE NAZWA=?";
        String selectOsobaQuery = "SELECT ID_OSOBA FROM OSOBA WHERE IMIE=? AND NAZWISKO=?";
        String selectPrzedmiotQuery="SELECT COUNT(*) FROM PRZYDZIAL WHERE ID_PRZEDMIOT=?";
        String selectWykl="SELECT ILOSC_GRUP_WYKL FROM PRZYDZIAL WHERE ID_PRZYDZIAL=?";
        String selectCw="SELECT ILOSC_GRUP_CW FROM PRZYDZIAL WHERE ID_PRZYDZIAL=?";
        String selectLab="SELECT ILOSC_GRUP_LAB FROM PRZYDZIAL WHERE ID_PRZYDZIAL=?";
        String selectProj="SELECT ILOSC_GRUP_PROJ FROM PRZYDZIAL WHERE ID_PRZYDZIAL=?";
        String selectWyklPG="SELECT ILOSC_GRUP_WYKL FROM PRZYDZIAL_GRUPA WHERE ID_PRZEDMIOT=?";
        String selectCwPG="SELECT ILOSC_GRUP_CW FROM PRZYDZIAL_GRUPA WHERE ID_PRZEDMIOT=?";
        String selectLabPG="SELECT ILOSC_GRUP_LAB FROM PRZYDZIAL_GRUPA WHERE ID_PRZEDMIOT=?";
        String selectProjPG="SELECT ILOSC_GRUP_PROJ FROM PRZYDZIAL_GRUPA WHERE ID_PRZEDMIOT=?";
        String selectWyklP="SELECT SUM(ILOSC_GRUP_WYKL) FROM PRZYDZIAL WHERE ID_PRZEDMIOT=?";
        String selectCwP="SELECT SUM(ILOSC_GRUP_CW) FROM PRZYDZIAL WHERE ID_PRZEDMIOT=?";
        String selectLabP="SELECT SUM(ILOSC_GRUP_LAB) FROM PRZYDZIAL WHERE ID_PRZEDMIOT=?";
        String selectProjP="SELECT SUM(ILOSC_GRUP_PROJ) FROM PRZYDZIAL WHERE ID_PRZEDMIOT=?";
        String updateQuery = "UPDATE PRZYDZIAL SET ID_PRZEDMIOT = ?,ID_OSOBA = ?,ILOSC_GRUP_WYKL = ?,ILOSC_GRUP_CW = ?,ILOSC_GRUP_LAB = ?,ILOSC_GRUP_PROJ = ?  WHERE ID_PRZYDZIAL = ?";
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
                Connection conn = null;
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        
                        psmt = conn.prepareStatement(selectQuery);
                        psmt.setString(1,nazwaPrzedmiotu);
                        ResultSet rs = psmt.executeQuery();
                         if(rs.next()){
                            
                             idPrzedmiot=rs.getString(1);
                         }else{
                             JOptionPane.showMessageDialog(null, "Nie ma takiego przedmiotu!");
                         }
                         System.out.println("Przedmiot");
                         psmt = conn.prepareStatement(selectOsobaQuery);
                        psmt.setString(1,imie);
                        psmt.setString(2,nazwisko);
                        rs = psmt.executeQuery();
                         if(rs.next()){
                            
                             idOsoba=rs.getString(1);
                         }else{
                             JOptionPane.showMessageDialog(null, "Nie ma takiej osoby!");
                         }
                         System.out.println("Osoba");
                         psmt = conn.prepareStatement(selectWykl);
                         psmt.setString(1,id);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            
                            lWyklBaza=Integer.parseInt(rs.getString(1));
                         }
                        System.out.println("1");
                        psmt = conn.prepareStatement(selectCw);
                         psmt.setString(1,id);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            
                            lCwBaza=Integer.parseInt(rs.getString(1));
                         }
                        System.out.println("2");
                        psmt = conn.prepareStatement(selectLab);
                         psmt.setString(1,id);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            
                            lLabBaza=Integer.parseInt(rs.getString(1));
                         }
                        System.out.println("3");
                        psmt = conn.prepareStatement(selectProj);
                         psmt.setString(1,id);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            
                            lProjBaza=Integer.parseInt(rs.getString(1));
                         }
                        System.out.println("4");
                         psmt = conn.prepareStatement(selectWyklPG);
                         psmt.setString(1,idPrzedmiot);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            
                            lWyklPg=Integer.parseInt(rs.getString(1));
                         }
                        psmt = conn.prepareStatement(selectCwPG);
                         psmt.setString(1,idPrzedmiot);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            
                            lCwPg=Integer.parseInt(rs.getString(1));
                         }
                        psmt = conn.prepareStatement(selectLabPG);
                         psmt.setString(1,idPrzedmiot);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            
                            lLabPg=Integer.parseInt(rs.getString(1));
                         }
                        psmt = conn.prepareStatement(selectProjPG);
                         psmt.setString(1,idPrzedmiot);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            
                            lProjPg=Integer.parseInt(rs.getString(1));
                         }
                        System.out.println("5");
                        psmt = conn.prepareStatement(selectPrzedmiotQuery);
                         psmt.setString(1,idPrzedmiot);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            sprawdzPrzedmiot=Integer.parseInt(rs.getString(1));
                            System.out.println("spradwzPerzed="+sprawdzPrzedmiot);
                        }else{
                            sprawdzPrzedmiot=0;
                        }
                        if(sprawdzPrzedmiot!=0){
                            System.out.println("5.6");
                        psmt = conn.prepareStatement(selectWyklP);
                         psmt.setString(1,idPrzedmiot);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            
                            lWyklP=Integer.parseInt(rs.getString(1));
                         } 
                        System.out.println("6");
                        
                        System.out.println("7");
                        psmt = conn.prepareStatement(selectCwP);
                         psmt.setString(1,idPrzedmiot);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            
                            lCwP=Integer.parseInt(rs.getString(1));
                         }
                        System.out.println("8");
                        
                        System.out.println("9");
                        psmt = conn.prepareStatement(selectLabP);
                         psmt.setString(1,idPrzedmiot);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            
                            lLabP=Integer.parseInt(rs.getString(1));
                         }
                        System.out.println("10");
                        
                        System.out.println("11");
                        psmt = conn.prepareStatement(selectProjP);
                         psmt.setString(1,idPrzedmiot);
                         rs = psmt.executeQuery();
                        if(rs.next()){
                            
                            lProjP=Integer.parseInt(rs.getString(1));
                         }
                        }
                        
                        System.out.println("13");
                        if(! sprawdzLiczbaGrup(lWyklPg,lWyklP,liczbaWyklad,lWyklBaza)){
                            JOptionPane.showMessageDialog(null, "Przedmiot nie posiada tylu wolnych grup wykładowych!");
                        }
                        else if(! sprawdzLiczbaGrup(lCwPg,lCwP,liczbaCwiczenia,lCwBaza)){
                            JOptionPane.showMessageDialog(null, "Przedmiot nie posiada tylu wolnych grup ćwiczeniowych!");
                        }
                        else if(! sprawdzLiczbaGrup(lLabPg,lLabP,liczbaLaboratoria,lLabBaza)){
                            JOptionPane.showMessageDialog(null, "Przedmiot nie posiada tylu wolnych grup laboratoryjnych!");
                        }
                        else if(! sprawdzLiczbaGrup(lProjPg,lProjP,liczbaProjekt,lProjBaza)){
                            JOptionPane.showMessageDialog(null, "Przedmiot nie posiada tylu wolnych grup projektowych!");
                        }
                        else{
                        psmt = conn.prepareStatement(updateQuery);
                        psmt.setString(1,idPrzedmiot);
                        psmt.setString(2,idOsoba);
                        psmt.setString(3,liczbaWyklad);
                        psmt.setString(4,liczbaCwiczenia);
                        psmt.setString(5,liczbaLaboratoria);
                        psmt.setString(6,liczbaProjekt);
                        psmt.setString(7,id);
                        psmt.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Zapisano!");
                        }
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }
    public void updatePrzydzialGrupa(String id,String nazwaPrzedmiotu,String liczbaWyklad,String liczbaCwiczenia,String liczbaLabolatoria,String liczbaProjekt){
        String idPrzedmiot="0";
        String selectQuery = "SELECT ID_PRZEDMIOT FROM PRZEDMIOT WHERE NAZWA=?";
        String updateQuery = "UPDATE PRZYDZIAL_GRUPA SET ID_PRZEDMIOT = ?,ILOSC_GRUP_WYKL = ?,ILOSC_GRUP_CW = ?,ILOSC_GRUP_LAB = ?,ILOSC_GRUP_PROJ = ?  WHERE ID_PRZYDZIAL_GRUPA = ?";
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
                Connection conn = null;
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                       System.out.println("baza?");
                        //Ustawiamy sterownik MySQL
                        //Uruchamiamy zapytanie do bazy danych
                        
                        psmt = conn.prepareStatement(selectQuery);
                        psmt.setString(1,nazwaPrzedmiotu);
                        ResultSet rs = psmt.executeQuery();
                         if(rs.next()){
                            
                             idPrzedmiot=rs.getString(1);
                         }else{
                             JOptionPane.showMessageDialog(null, "Nie ma takiego przedmiotu!");
                         }
                        System.out.println("select ok"); 
                        psmt = conn.prepareStatement(updateQuery);
                        psmt.setString(1,idPrzedmiot);
                        psmt.setString(2,liczbaWyklad);
                        psmt.setString(3,liczbaCwiczenia);
                        psmt.setString(4,liczbaLabolatoria);
                        psmt.setString(5,liczbaProjekt);
                        psmt.setString(6,id);
                        psmt.executeUpdate();
                        JOptionPane.showMessageDialog(null, "Zapisano!");

                        
       
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }
    
    public void generujRaport(){
        String query = "SELECT PG.ID_PRZEDMIOT, P.NAZWA, PG.ILOSC_GRUP_WYKL, PG.ILOSC_GRUP_CW, PG.ILOSC_GRUP_LAB, ILOSC_GRUP_PROJ FROM PRZEDMIOT P INNER JOIN PRZYDZIAL_GRUPA PG ON P.ID_PRZEDMIOT=PG.ID_PRZEDMIOT";
        String sumWyklQuery="SELECT SUM(ILOSC_GRUP_WYKL) FROM PRZYDZIAL WHERE ID_PRZEDMIOT=?";
        String sumCwQuery="SELECT SUM(ILOSC_GRUP_CW) FROM przydzial where id_przedmiot=?";
        String sumLabQuery="SELECT SUM(ILOSC_GRUP_LAB) FROM przydzial where id_przedmiot=?";
        String sumProjQuery="SELECT SUM(ILOSC_GRUP_PROJ) FROM przydzial where id_przedmiot=?";
        String przedmiotOsobaQuery="SELECT P.ID_PRZEDMIOT, P.NAZWA FROM PRZEDMIOT P INNER JOIN PRZYDZIAL PR ON P.ID_PRZEDMIOT=PR.ID_PRZEDMIOT WHERE PR.ID_OSOBA=?";
        String osobaQuery = "SELECT O.ID_OSOBA, O.IMIE, O.NAZWISKO FROM OSOBA O INNER JOIN KONTO K ON O.ID_OSOBA=K.ID_OSOBA WHERE K.UPRAWNIENIA=3";
        String sumWyklOsobaQuery="SELECT SUM(ILOSC_GRUP_WYKL) FROM PRZYDZIAL WHERE ID_OSOBA=? AND ID_PRZEDMIOT=?";
        String sumCwOsobaQuery="SELECT SUM(ILOSC_GRUP_CW) FROM przydzial where ID_OSOBA=? AND ID_PRZEDMIOT=?";
        String sumLabOsobaQuery="SELECT SUM(ILOSC_GRUP_LAB) FROM przydzial where ID_OSOBA=? AND ID_PRZEDMIOT=?";
        String sumProjOsobaQuery="SELECT SUM(ILOSC_GRUP_PROJ) FROM przydzial where ID_OSOBA=? AND ID_PRZEDMIOT=?";
        String gWyklOsobaQuery="SELECT H_WYKLAD FROM PRZEDMIOT WHERE ID_PRZEDMIOT=?";
        String gCwOsobaQuery="SELECT H_CWICZENIA FROM PRZEDMIOT WHERE ID_PRZEDMIOT=?";
        String gLabOsobaQuery="SELECT H_LABOLATORIA FROM PRZEDMIOT WHERE ID_PRZEDMIOT=?";
        String gProjOsobaQuery="SELECT H_PROJEKT FROM PRZEDMIOT WHERE ID_PRZEDMIOT=?";
        
        
        
        
        
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
        Connection conn = null;
        int sprawdzDane=0;
        int idPrzydzialGrupa=0;
        ArrayList<String> nazwaPrzedmiotu=new ArrayList<String>();
        ArrayList<String> liczbaWyklad=new ArrayList<String>();
        ArrayList<String> liczbaCwiczenia=new ArrayList<String>();
        ArrayList<String> liczbaLabolatoria=new ArrayList<String>();
        ArrayList<String> liczbaProjekt=new ArrayList<String>();
        ArrayList<String> imie=new ArrayList<String>();
        ArrayList<String> nazwisko=new ArrayList<String>();
        ArrayList<String> liczbaOsobaWyklad=new ArrayList<String>();
        ArrayList<String> liczbaOsobaCwiczenia=new ArrayList<String>();
        ArrayList<String> liczbaOsobaLabolatoria=new ArrayList<String>();
        ArrayList<String> liczbaOsobaProjekt=new ArrayList<String>();
        String liczbaGrup="-";
        String lWykl="0";
        String lCw="0";
        String lLab="0";
        String lProj="0";
        ArrayList<String> liczbaWykl=new ArrayList<String>();
        ArrayList<String> liczbaCw=new ArrayList<String>();
        ArrayList<String> liczbaLab=new ArrayList<String>();
        ArrayList<String> liczbaProj=new ArrayList<String>();
        ArrayList<String> gWykl=new ArrayList<String>();
        ArrayList<String> gCw=new ArrayList<String>();
        ArrayList<String> gLab=new ArrayList<String>();
        ArrayList<String> gProj=new ArrayList<String>();
        int licznik=0;
        int licznikOsoba=0;
        ArrayList<String> idPrzedmiot=new ArrayList<String>();
        ArrayList<String> idPrzedmiotOsoba=new ArrayList<String>();
        ArrayList<String> idOsoba=new ArrayList<String>();
                
               
                try {
                    Statement stmt; 
                    PreparedStatement psmt;
                    Class.forName(className);
                        System.out.println("driver zaladowany");
                        //Ustawiamy dane dotyczące podłączenia
                        conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
                        RaportJFrame raport = new RaportJFrame(); 
                        System.out.println("select query!");
                        
                        String raportText="Przydzielone nauczyciele do grup/ilość grup w danym przedmiocie.";
                        String text=raport.raportTextArea.getText();
                        raport.raportTextArea.setText(text+"\n"+raportText);
                        
                        //raport grupy
                        psmt = conn.prepareStatement(query);
                        ResultSet rs = psmt.executeQuery();
                        
                         while(rs.next()){
                            
                            System.out.println("while rs.next");
                            idPrzedmiot.add(rs.getString(1));
                            nazwaPrzedmiotu.add(rs.getString(2));
                            liczbaWyklad.add(rs.getString(3));
                            liczbaCwiczenia.add(rs.getString(4));
                            liczbaLabolatoria.add(rs.getString(5));
                            liczbaProjekt.add(rs.getString(6));
                            System.out.println("idPrzedmiot:"+idPrzedmiot.get(licznik));
                            licznik++;
                            
                        }
                         
                        int i=0;
                        while(i<licznik){
                        String idPrzed= idPrzedmiot.get(i); 
                        System.out.println("idPrzedmiot="+idPrzed);
                        System.out.println("select sumWyklQuery!");
                        psmt = conn.prepareStatement(sumWyklQuery);
                        psmt.setString(1,idPrzed);
                        rs = psmt.executeQuery();
                        if(rs.next()){
                            lWykl=rs.getString(1);
                        }
                        System.out.println("select sumCwQuery!");
                        psmt = conn.prepareStatement(sumCwQuery);
                        psmt.setString(1,idPrzedmiot.get(i));
                        rs = psmt.executeQuery();
                        if(rs.next()){
                            lCw=rs.getString(1);
                        }
                        System.out.println("select sumLabQuery!");
                        psmt = conn.prepareStatement(sumLabQuery);
                        psmt.setString(1,idPrzedmiot.get(i));
                        rs = psmt.executeQuery();
                        if(rs.next()){
                            lLab=rs.getString(1);
                        }
                        System.out.println("select sumProjQuery!");
                        psmt = conn.prepareStatement(sumProjQuery);
                        psmt.setString(1,idPrzedmiot.get(i));
                        rs = psmt.executeQuery();
                        if(rs.next()){
                            lProj=rs.getString(1);
                        }
                        raportText="Przedmiot:"+nazwaPrzedmiotu.get(i)+"\n Przydzielone grupy wykładowe:"+lWykl+"/"+liczbaWyklad.get(i)+"\n Przydzielone grupy ćwiczeniowe:"+lCw+"/"+liczbaCwiczenia.get(i)+"\n Przydzielone grupy labolatoryjne:"+lLab+"/"+liczbaLabolatoria.get(i)+"\n Przydzielone grupy projektowe:"+lProj+"/"+liczbaProjekt.get(i)+"\n------------------------------------------";
                        
                        text=raport.raportTextArea.getText();
                        raport.raportTextArea.setText(text+"\n"+raportText);
                        i++;
                        }
                        //raport nauczyciele
                        
                        raportText="****************************** \nIlość godzin nauczycieli.";
                        text=raport.raportTextArea.getText();
                        raport.raportTextArea.setText(text+"\n"+raportText);
                        System.out.println("select osobaQuery!");
                        psmt = conn.prepareStatement(osobaQuery);
                        rs = psmt.executeQuery();
                        
                         while(rs.next()){
                            
                            idOsoba.add(rs.getString(1));
                            imie.add(rs.getString(2));
                            nazwisko.add(rs.getString(3));
                            licznikOsoba++;
                        }
                         nazwaPrzedmiotu.clear();
                         idPrzedmiot.clear();
                        i=0;
                        int licznikPrzedmiotow=0;
                        int j=0; 
                        
                        while(i<licznikOsoba){
                        int licznikGodzin=0;    
                        System.out.println("select przedmiotOsobaQuery!");
                        psmt = conn.prepareStatement(przedmiotOsobaQuery);
                        psmt.setString(1,idOsoba.get(i));
                        rs = psmt.executeQuery();
                        while(rs.next()){
                            idPrzedmiot.add(rs.getString(1));
                            nazwaPrzedmiotu.add(rs.getString(2));
                            licznikPrzedmiotow++;
                        }
                        while(j<licznikPrzedmiotow){
                            System.out.println("select sumWyklOsobaQuery!");
                            psmt = conn.prepareStatement(sumWyklOsobaQuery);
                            psmt.setString(1,idOsoba.get(i));
                            psmt.setString(2,idPrzedmiot.get(j));
                            rs = psmt.executeQuery();
                            if(rs.next()){
                                liczbaWykl.add(rs.getString(1));
                            }
                            System.out.println("select gWyklOsobaQuery!");
                            psmt = conn.prepareStatement(gWyklOsobaQuery);
                            psmt.setString(1,idPrzedmiot.get(j));
                            rs = psmt.executeQuery(); 
                            if(rs.next()){
                                gWykl.add(rs.getString(1));
                            }
                            System.out.println("select sumCwOsobaQuery!");
                            psmt = conn.prepareStatement(sumCwOsobaQuery);
                            psmt.setString(1,idOsoba.get(i));
                            psmt.setString(2,idPrzedmiot.get(j));
                            rs = psmt.executeQuery();
                            if(rs.next()){
                                liczbaCw.add(rs.getString(1));
                            }
                            System.out.println("select gCwOsobaQuery!");
                            psmt = conn.prepareStatement(gCwOsobaQuery);
                            psmt.setString(1,idPrzedmiot.get(j));
                            rs = psmt.executeQuery(); 
                            if(rs.next()){
                                gCw.add(rs.getString(1));
                            }
                            System.out.println("select sumLabOsobaQuery!");
                            psmt = conn.prepareStatement(sumLabOsobaQuery);
                            psmt.setString(1,idOsoba.get(i));
                            psmt.setString(2,idPrzedmiot.get(j));
                            rs = psmt.executeQuery();
                            if(rs.next()){
                                liczbaLab.add(rs.getString(1));
                            }
                            System.out.println("select gLabOsobaQuery!");
                            psmt = conn.prepareStatement(gLabOsobaQuery);
                            psmt.setString(1,idPrzedmiot.get(j));
                            rs = psmt.executeQuery(); 
                            if(rs.next()){
                                gLab.add(rs.getString(1));
                            }
                            psmt = conn.prepareStatement(sumProjOsobaQuery);
                            psmt.setString(1,idOsoba.get(i));
                            psmt.setString(2,idPrzedmiot.get(j));
                            rs = psmt.executeQuery();
                            if(rs.next()){
                                liczbaProj.add(rs.getString(1));
                            }
                            psmt = conn.prepareStatement(gProjOsobaQuery);
                            psmt.setString(1,idPrzedmiot.get(j));
                            rs = psmt.executeQuery(); 
                            if(rs.next()){
                                gProj.add(rs.getString(1));
                            }
                            
                            j++;
                        }
                        int liczbaGodzin=liczbaGodzin(liczbaWykl, gWykl, liczbaCw, gCw, liczbaProj, gLab, liczbaProj, gProj);
                        raportText=imie.get(i)+" "+nazwisko.get(i)+" ma przypisane "+liczbaGodzin+" godzin.";
                        text=raport.raportTextArea.getText();
                        raport.raportTextArea.setText(text+"\n"+raportText);
                        liczbaWykl.clear();
                        gWykl.clear();
                        liczbaCw.clear();
                        gCw.clear();
                        liczbaProj.clear();
                        gLab.clear();
                        liczbaProj.clear();
                        gProj.clear();
                        i++;
                        }
                        raport.setVisible(true);
                        conn.close();
                }
                //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
                catch(ClassNotFoundException wyjatek) {
                        System.out.println("Problem ze sterownikiem");
                        System.out.println(wyjatek.getMessage());
                }
 
                catch(SQLException wyjatek) {
                        //e.printStackTrace();
                        //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
                        System.out.println("SQLException: " + wyjatek.getMessage());
                    System.out.println("SQLState: " + wyjatek.getSQLState());
                    System.out.println("VendorError: " + wyjatek.getErrorCode());
                }
    }
    
    
    public int liczbaGodzin(ArrayList<String> hw,ArrayList<String> gw,ArrayList<String> hc, ArrayList<String> gc,ArrayList<String> hl, ArrayList<String> gl,ArrayList<String> hp, ArrayList<String> gp){
        int wynik=0;
        int rozmiar=hw.size();
        int hWyklad=0;
        int gWyklad=0;
        int hCwiczenia=0;
        int gCwiczenia=0;
        int hLaboratoria=0;
        int gLaboratoria=0;
        int hProjekt=0;
        int gProjekt=0;
        
        for(int i=0;i<rozmiar;i++){
            hWyklad=Integer.parseInt(hw.get(i));
            gWyklad=Integer.parseInt(gw.get(i));
            hCwiczenia=Integer.parseInt(hc.get(i));
            gCwiczenia=Integer.parseInt(gc.get(i));
            hLaboratoria=Integer.parseInt(hl.get(i));
            gLaboratoria=Integer.parseInt(gl.get(i));
            hProjekt=Integer.parseInt(hp.get(i));
            gProjekt=Integer.parseInt(gp.get(i));
            wynik=wynik+hWyklad*gWyklad+hCwiczenia*gCwiczenia+hLaboratoria*gLaboratoria+hProjekt*gProjekt;
        }
        
        return wynik;
    }
    
    public boolean sprawdzLiczbaGrup(int lDzialPg, int lDzialP, String liczbaDzial, int lDzialBaza){
        int lDzial=lDzialPg-lDzialP-Integer.parseInt(liczbaDzial)+lDzialBaza;
        if(lDzial>=0){
            return true;
        }else{
            return false;
        }
    }
    
    public void zmienHaslo(String has,String noweHas,String potwierdzHas){
        String query = "Select * FROM KONTO WHERE LOGIN=? AND HASLO=?";
        String updateQuery = "UPDATE KONTO SET HASLO = ? WHERE LOGIN=? AND HASLO=?";
        DBCONNECT dbConnect= new DBCONNECT();
        String className=dbConnect.getClassName();
        String baza=dbConnect.getBaza();
        String loginBaza=dbConnect.getLoginBaza();
        String hasloBaza=dbConnect.getHasloBaza();
        Connection conn = null;
        ZalogujJFrame logframe= new ZalogujJFrame();
        String login=logframe.getLogin();
        System.out.println("login:"+login);
        
        try {
            Statement stmt;
            PreparedStatement psmt;
            Class.forName(className);
            System.out.println("driver zaladowany");
            //Ustawiamy dane dotyczące podłączenia
            conn = DriverManager.getConnection(baza,loginBaza,hasloBaza);
            System.out.println("baza?");
            stmt = conn.createStatement();
            psmt = conn.prepareStatement(query);
            psmt.setString(1,login);
            psmt.setString(2,has);
            ResultSet rs = psmt.executeQuery();

            if(rs.next()){
                if(sprawdzHaslo(noweHas)){
        
                if(noweHas.equals(potwierdzHas)){
                    psmt = conn.prepareStatement(updateQuery);
                    psmt.setString(1,noweHas);
                    psmt.setString(2,login);
                    psmt.setString(3,has);
                    psmt.executeUpdate();
                    JOptionPane.showMessageDialog(null, "Hasło zostało zmienione!");
                }else{
                    JOptionPane.showMessageDialog(null, "Hasła się różnią!");
                }
                }else{
           JOptionPane.showMessageDialog(null, "Nowe hasło jest za słabe!"); 
        }
            }
            else{
                JOptionPane.showMessageDialog(null, "Złe hasło!");
            }
            conn.close();
        }
        //Wyrzuć wyjątki jężeli nastąpią błędy z podłączeniem do bazy danych lub blędy zapytania o dane
        catch(ClassNotFoundException wyjatek) {
            System.out.println("Problem ze sterownikiem");
            System.out.println(wyjatek.getMessage());
        }

        catch(SQLException wyjatek) {
            //e.printStackTrace();
            //System.out.println("Problem z logowaniem\nProsze sprawdzic:\n nazwę użytkownika, hasło, nazwę bazy danych lub adres IP serwera");
            System.out.println("SQLException: " + wyjatek.getMessage());
            System.out.println("SQLState: " + wyjatek.getSQLState());
            System.out.println("VendorError: " + wyjatek.getErrorCode());
        }
    }
    
    public boolean sprawdzHaslo(String haslo){
        int dlugosc=haslo.length();
        boolean znakSpecjalny=false;
        boolean cyfra=false;
        for(int i=0;i<dlugosc;i++){
            
        
        char znak=haslo.charAt(i);
        if(isDigit(znak)){
           cyfra=true; 
        }
        if(((znak>=0x21)&&(znak<=0x2f))||((znak>=0x3a)&&(znak<=0x40))||((znak>=0x5b)&&(znak<=0x60))||((znak>=0x7b)&&(znak<=0x7e))){
            znakSpecjalny=true;
        }
        }
        if(cyfra&&znakSpecjalny&&(dlugosc>6)){
            return true;
        }else{
            return false;
        }
    }
   
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UkladajacyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UkladajacyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UkladajacyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UkladajacyJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UkladajacyJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPrzydzielGrupy;
    private javax.swing.JButton jButtonPrzydzielNauczycieli;
    private javax.swing.JButton jButtonRaport;
    private javax.swing.JButton jButtonZarzadzajKontem;
    private javax.swing.JButton jButtonZmienHaslo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JMenuItem jMenuItemDodaj;
    private javax.swing.JMenuItem jMenuItemDodajP;
    private javax.swing.JMenuItem jMenuItemUpdate;
    private javax.swing.JMenuItem jMenuItemUpdateP;
    private javax.swing.JMenuItem jMenuItemUsun;
    private javax.swing.JMenuItem jMenuItemUsunP;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanelMenu;
    private javax.swing.JPanel jPanelPrzydzielGrupy;
    private javax.swing.JPanel jPanelPrzydzielNauczycieli;
    private javax.swing.JPanel jPanelZarzadzanieKontem;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPasswordField newPasswordField;
    private javax.swing.JPasswordField potwierdzPasswordField;
    private javax.swing.JPasswordField starehasloField;
    private static javax.swing.JTable ukladajacyTable1;
    private static javax.swing.JTable ukladajacyTable2;
    private javax.swing.JButton wylogujButton;
    // End of variables declaration//GEN-END:variables
}
